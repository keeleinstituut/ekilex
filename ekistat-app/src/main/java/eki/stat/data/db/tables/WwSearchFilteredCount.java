/*
 * This file is generated by jOOQ.
 */
package eki.stat.data.db.tables;


import eki.stat.data.db.Keys;
import eki.stat.data.db.Public;
import eki.stat.data.db.tables.records.WwSearchFilteredCountRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WwSearchFilteredCount extends TableImpl<WwSearchFilteredCountRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.ww_search_filtered_count</code>
     */
    public static final WwSearchFilteredCount WW_SEARCH_FILTERED_COUNT = new WwSearchFilteredCount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WwSearchFilteredCountRecord> getRecordType() {
        return WwSearchFilteredCountRecord.class;
    }

    /**
     * The column <code>public.ww_search_filtered_count.id</code>.
     */
    public final TableField<WwSearchFilteredCountRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.ww_search_filtered_count.search_word</code>.
     */
    public final TableField<WwSearchFilteredCountRecord, String> SEARCH_WORD = createField(DSL.name("search_word"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.ww_search_filtered_count.search_mode</code>.
     */
    public final TableField<WwSearchFilteredCountRecord, String> SEARCH_MODE = createField(DSL.name("search_mode"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.ww_search_filtered_count.destin_langs</code>.
     */
    public final TableField<WwSearchFilteredCountRecord, String[]> DESTIN_LANGS = createField(DSL.name("destin_langs"), SQLDataType.VARCHAR(10).getArrayDataType(), this, "");

    /**
     * The column <code>public.ww_search_filtered_count.dataset_codes</code>.
     */
    public final TableField<WwSearchFilteredCountRecord, String[]> DATASET_CODES = createField(DSL.name("dataset_codes"), SQLDataType.VARCHAR(10).getArrayDataType(), this, "");

    /**
     * The column <code>public.ww_search_filtered_count.result_exists</code>.
     */
    public final TableField<WwSearchFilteredCountRecord, Boolean> RESULT_EXISTS = createField(DSL.name("result_exists"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.ww_search_filtered_count.request_origin</code>.
     */
    public final TableField<WwSearchFilteredCountRecord, String> REQUEST_ORIGIN = createField(DSL.name("request_origin"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.ww_search_filtered_count.search_date</code>.
     */
    public final TableField<WwSearchFilteredCountRecord, LocalDate> SEARCH_DATE = createField(DSL.name("search_date"), SQLDataType.LOCALDATE.nullable(false).defaultValue(DSL.field("CURRENT_DATE", SQLDataType.LOCALDATE)), this, "");

    /**
     * The column <code>public.ww_search_filtered_count.search_count</code>.
     */
    public final TableField<WwSearchFilteredCountRecord, Integer> SEARCH_COUNT = createField(DSL.name("search_count"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    private WwSearchFilteredCount(Name alias, Table<WwSearchFilteredCountRecord> aliased) {
        this(alias, aliased, null);
    }

    private WwSearchFilteredCount(Name alias, Table<WwSearchFilteredCountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.ww_search_filtered_count</code> table reference
     */
    public WwSearchFilteredCount(String alias) {
        this(DSL.name(alias), WW_SEARCH_FILTERED_COUNT);
    }

    /**
     * Create an aliased <code>public.ww_search_filtered_count</code> table reference
     */
    public WwSearchFilteredCount(Name alias) {
        this(alias, WW_SEARCH_FILTERED_COUNT);
    }

    /**
     * Create a <code>public.ww_search_filtered_count</code> table reference
     */
    public WwSearchFilteredCount() {
        this(DSL.name("ww_search_filtered_count"), null);
    }

    public <O extends Record> WwSearchFilteredCount(Table<O> child, ForeignKey<O, WwSearchFilteredCountRecord> key) {
        super(child, key, WW_SEARCH_FILTERED_COUNT);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<WwSearchFilteredCountRecord, Long> getIdentity() {
        return (Identity<WwSearchFilteredCountRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<WwSearchFilteredCountRecord> getPrimaryKey() {
        return Keys.WW_SEARCH_FILTERED_COUNT_PKEY;
    }

    @Override
    public List<UniqueKey<WwSearchFilteredCountRecord>> getKeys() {
        return Arrays.<UniqueKey<WwSearchFilteredCountRecord>>asList(Keys.WW_SEARCH_FILTERED_COUNT_PKEY, Keys.WW_SEARCH_FILTERED_COUNT_SEARCH_WORD_SEARCH_MODE_DESTIN_LAN_KEY);
    }

    @Override
    public WwSearchFilteredCount as(String alias) {
        return new WwSearchFilteredCount(DSL.name(alias), this);
    }

    @Override
    public WwSearchFilteredCount as(Name alias) {
        return new WwSearchFilteredCount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WwSearchFilteredCount rename(String name) {
        return new WwSearchFilteredCount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WwSearchFilteredCount rename(Name name) {
        return new WwSearchFilteredCount(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, String, String[], String[], Boolean, String, LocalDate, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
