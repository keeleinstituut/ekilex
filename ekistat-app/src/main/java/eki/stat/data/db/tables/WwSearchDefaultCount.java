/*
 * This file is generated by jOOQ.
 */
package eki.stat.data.db.tables;


import eki.stat.data.db.Keys;
import eki.stat.data.db.Public;
import eki.stat.data.db.tables.records.WwSearchDefaultCountRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WwSearchDefaultCount extends TableImpl<WwSearchDefaultCountRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.ww_search_default_count</code>
     */
    public static final WwSearchDefaultCount WW_SEARCH_DEFAULT_COUNT = new WwSearchDefaultCount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WwSearchDefaultCountRecord> getRecordType() {
        return WwSearchDefaultCountRecord.class;
    }

    /**
     * The column <code>public.ww_search_default_count.id</code>.
     */
    public final TableField<WwSearchDefaultCountRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.ww_search_default_count.search_word</code>.
     */
    public final TableField<WwSearchDefaultCountRecord, String> SEARCH_WORD = createField(DSL.name("search_word"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.ww_search_default_count.result_exists</code>.
     */
    public final TableField<WwSearchDefaultCountRecord, Boolean> RESULT_EXISTS = createField(DSL.name("result_exists"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.ww_search_default_count.request_origin</code>.
     */
    public final TableField<WwSearchDefaultCountRecord, String> REQUEST_ORIGIN = createField(DSL.name("request_origin"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.ww_search_default_count.search_date</code>.
     */
    public final TableField<WwSearchDefaultCountRecord, LocalDate> SEARCH_DATE = createField(DSL.name("search_date"), SQLDataType.LOCALDATE.nullable(false).defaultValue(DSL.field("CURRENT_DATE", SQLDataType.LOCALDATE)), this, "");

    /**
     * The column <code>public.ww_search_default_count.search_count</code>.
     */
    public final TableField<WwSearchDefaultCountRecord, Integer> SEARCH_COUNT = createField(DSL.name("search_count"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    private WwSearchDefaultCount(Name alias, Table<WwSearchDefaultCountRecord> aliased) {
        this(alias, aliased, null);
    }

    private WwSearchDefaultCount(Name alias, Table<WwSearchDefaultCountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.ww_search_default_count</code> table reference
     */
    public WwSearchDefaultCount(String alias) {
        this(DSL.name(alias), WW_SEARCH_DEFAULT_COUNT);
    }

    /**
     * Create an aliased <code>public.ww_search_default_count</code> table reference
     */
    public WwSearchDefaultCount(Name alias) {
        this(alias, WW_SEARCH_DEFAULT_COUNT);
    }

    /**
     * Create a <code>public.ww_search_default_count</code> table reference
     */
    public WwSearchDefaultCount() {
        this(DSL.name("ww_search_default_count"), null);
    }

    public <O extends Record> WwSearchDefaultCount(Table<O> child, ForeignKey<O, WwSearchDefaultCountRecord> key) {
        super(child, key, WW_SEARCH_DEFAULT_COUNT);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<WwSearchDefaultCountRecord, Long> getIdentity() {
        return (Identity<WwSearchDefaultCountRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<WwSearchDefaultCountRecord> getPrimaryKey() {
        return Keys.WW_SEARCH_DEFAULT_COUNT_PKEY;
    }

    @Override
    public List<UniqueKey<WwSearchDefaultCountRecord>> getKeys() {
        return Arrays.<UniqueKey<WwSearchDefaultCountRecord>>asList(Keys.WW_SEARCH_DEFAULT_COUNT_PKEY, Keys.WW_SEARCH_DEFAULT_COUNT_SEARCH_WORD_RESULT_EXISTS_REQUEST_O_KEY);
    }

    @Override
    public WwSearchDefaultCount as(String alias) {
        return new WwSearchDefaultCount(DSL.name(alias), this);
    }

    @Override
    public WwSearchDefaultCount as(Name alias) {
        return new WwSearchDefaultCount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WwSearchDefaultCount rename(String name) {
        return new WwSearchDefaultCount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WwSearchDefaultCount rename(Name name) {
        return new WwSearchDefaultCount(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, Boolean, String, LocalDate, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
