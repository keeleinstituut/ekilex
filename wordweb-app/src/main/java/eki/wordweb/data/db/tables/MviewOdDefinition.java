/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.MviewOdDefinitionRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewOdDefinition extends TableImpl<MviewOdDefinitionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.mview_od_definition</code>
     */
    public static final MviewOdDefinition MVIEW_OD_DEFINITION = new MviewOdDefinition();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MviewOdDefinitionRecord> getRecordType() {
        return MviewOdDefinitionRecord.class;
    }

    /**
     * The column <code>public.mview_od_definition.meaning_id</code>.
     */
    public final TableField<MviewOdDefinitionRecord, Long> MEANING_ID = createField(DSL.name("meaning_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_od_definition.definition_id</code>.
     */
    public final TableField<MviewOdDefinitionRecord, Long> DEFINITION_ID = createField(DSL.name("definition_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_od_definition.value</code>.
     */
    public final TableField<MviewOdDefinitionRecord, String> VALUE = createField(DSL.name("value"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_od_definition.value_prese</code>.
     */
    public final TableField<MviewOdDefinitionRecord, String> VALUE_PRESE = createField(DSL.name("value_prese"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_od_definition.lang</code>.
     */
    public final TableField<MviewOdDefinitionRecord, String> LANG = createField(DSL.name("lang"), SQLDataType.CHAR(3), this, "");

    private MviewOdDefinition(Name alias, Table<MviewOdDefinitionRecord> aliased) {
        this(alias, aliased, null);
    }

    private MviewOdDefinition(Name alias, Table<MviewOdDefinitionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView());
    }

    /**
     * Create an aliased <code>public.mview_od_definition</code> table reference
     */
    public MviewOdDefinition(String alias) {
        this(DSL.name(alias), MVIEW_OD_DEFINITION);
    }

    /**
     * Create an aliased <code>public.mview_od_definition</code> table reference
     */
    public MviewOdDefinition(Name alias) {
        this(alias, MVIEW_OD_DEFINITION);
    }

    /**
     * Create a <code>public.mview_od_definition</code> table reference
     */
    public MviewOdDefinition() {
        this(DSL.name("mview_od_definition"), null);
    }

    public <O extends Record> MviewOdDefinition(Table<O> child, ForeignKey<O, MviewOdDefinitionRecord> key) {
        super(child, key, MVIEW_OD_DEFINITION);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public MviewOdDefinition as(String alias) {
        return new MviewOdDefinition(DSL.name(alias), this);
    }

    @Override
    public MviewOdDefinition as(Name alias) {
        return new MviewOdDefinition(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewOdDefinition rename(String name) {
        return new MviewOdDefinition(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewOdDefinition rename(Name name) {
        return new MviewOdDefinition(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
