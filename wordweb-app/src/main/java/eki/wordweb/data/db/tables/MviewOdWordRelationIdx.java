/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.MviewOdWordRelationIdxRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewOdWordRelationIdx extends TableImpl<MviewOdWordRelationIdxRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.mview_od_word_relation_idx</code>
     */
    public static final MviewOdWordRelationIdx MVIEW_OD_WORD_RELATION_IDX = new MviewOdWordRelationIdx();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MviewOdWordRelationIdxRecord> getRecordType() {
        return MviewOdWordRelationIdxRecord.class;
    }

    /**
     * The column <code>public.mview_od_word_relation_idx.word_id</code>.
     */
    public final TableField<MviewOdWordRelationIdxRecord, Long> WORD_ID = createField(DSL.name("word_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_od_word_relation_idx.word_relation_id</code>.
     */
    public final TableField<MviewOdWordRelationIdxRecord, Long> WORD_RELATION_ID = createField(DSL.name("word_relation_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_od_word_relation_idx.word_rel_type_code</code>.
     */
    public final TableField<MviewOdWordRelationIdxRecord, String> WORD_REL_TYPE_CODE = createField(DSL.name("word_rel_type_code"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.mview_od_word_relation_idx.related_word_id</code>.
     */
    public final TableField<MviewOdWordRelationIdxRecord, Long> RELATED_WORD_ID = createField(DSL.name("related_word_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_od_word_relation_idx.value</code>.
     */
    public final TableField<MviewOdWordRelationIdxRecord, String> VALUE = createField(DSL.name("value"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_od_word_relation_idx.value_as_word</code>.
     */
    public final TableField<MviewOdWordRelationIdxRecord, String> VALUE_AS_WORD = createField(DSL.name("value_as_word"), SQLDataType.CLOB, this, "");

    private MviewOdWordRelationIdx(Name alias, Table<MviewOdWordRelationIdxRecord> aliased) {
        this(alias, aliased, null);
    }

    private MviewOdWordRelationIdx(Name alias, Table<MviewOdWordRelationIdxRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView());
    }

    /**
     * Create an aliased <code>public.mview_od_word_relation_idx</code> table reference
     */
    public MviewOdWordRelationIdx(String alias) {
        this(DSL.name(alias), MVIEW_OD_WORD_RELATION_IDX);
    }

    /**
     * Create an aliased <code>public.mview_od_word_relation_idx</code> table reference
     */
    public MviewOdWordRelationIdx(Name alias) {
        this(alias, MVIEW_OD_WORD_RELATION_IDX);
    }

    /**
     * Create a <code>public.mview_od_word_relation_idx</code> table reference
     */
    public MviewOdWordRelationIdx() {
        this(DSL.name("mview_od_word_relation_idx"), null);
    }

    public <O extends Record> MviewOdWordRelationIdx(Table<O> child, ForeignKey<O, MviewOdWordRelationIdxRecord> key) {
        super(child, key, MVIEW_OD_WORD_RELATION_IDX);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public MviewOdWordRelationIdx as(String alias) {
        return new MviewOdWordRelationIdx(DSL.name(alias), this);
    }

    @Override
    public MviewOdWordRelationIdx as(Name alias) {
        return new MviewOdWordRelationIdx(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewOdWordRelationIdx rename(String name) {
        return new MviewOdWordRelationIdx(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewOdWordRelationIdx rename(Name name) {
        return new MviewOdWordRelationIdx(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, String, Long, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
