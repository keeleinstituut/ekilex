/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables.records;


import eki.wordweb.data.db.tables.MviewWwNewWordMenu;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwNewWordMenuRecord extends TableRecordImpl<MviewWwNewWordMenuRecord> implements Record6<Long, String, String, Integer, Integer, String[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.mview_ww_new_word_menu.word_id</code>.
     */
    public void setWordId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.mview_ww_new_word_menu.word_id</code>.
     */
    public Long getWordId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.mview_ww_new_word_menu.word_value</code>.
     */
    public void setWordValue(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.mview_ww_new_word_menu.word_value</code>.
     */
    public String getWordValue() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.mview_ww_new_word_menu.word_value_prese</code>.
     */
    public void setWordValuePrese(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.mview_ww_new_word_menu.word_value_prese</code>.
     */
    public String getWordValuePrese() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.mview_ww_new_word_menu.homonym_nr</code>.
     */
    public void setHomonymNr(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.mview_ww_new_word_menu.homonym_nr</code>.
     */
    public Integer getHomonymNr() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.mview_ww_new_word_menu.reg_year</code>.
     */
    public void setRegYear(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.mview_ww_new_word_menu.reg_year</code>.
     */
    public Integer getRegYear() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.mview_ww_new_word_menu.word_type_codes</code>.
     */
    public void setWordTypeCodes(String[] value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.mview_ww_new_word_menu.word_type_codes</code>.
     */
    public String[] getWordTypeCodes() {
        return (String[]) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, Integer, Integer, String[]> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, String, Integer, Integer, String[]> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return MviewWwNewWordMenu.MVIEW_WW_NEW_WORD_MENU.WORD_ID;
    }

    @Override
    public Field<String> field2() {
        return MviewWwNewWordMenu.MVIEW_WW_NEW_WORD_MENU.WORD_VALUE;
    }

    @Override
    public Field<String> field3() {
        return MviewWwNewWordMenu.MVIEW_WW_NEW_WORD_MENU.WORD_VALUE_PRESE;
    }

    @Override
    public Field<Integer> field4() {
        return MviewWwNewWordMenu.MVIEW_WW_NEW_WORD_MENU.HOMONYM_NR;
    }

    @Override
    public Field<Integer> field5() {
        return MviewWwNewWordMenu.MVIEW_WW_NEW_WORD_MENU.REG_YEAR;
    }

    @Override
    public Field<String[]> field6() {
        return MviewWwNewWordMenu.MVIEW_WW_NEW_WORD_MENU.WORD_TYPE_CODES;
    }

    @Override
    public Long component1() {
        return getWordId();
    }

    @Override
    public String component2() {
        return getWordValue();
    }

    @Override
    public String component3() {
        return getWordValuePrese();
    }

    @Override
    public Integer component4() {
        return getHomonymNr();
    }

    @Override
    public Integer component5() {
        return getRegYear();
    }

    @Override
    public String[] component6() {
        return getWordTypeCodes();
    }

    @Override
    public Long value1() {
        return getWordId();
    }

    @Override
    public String value2() {
        return getWordValue();
    }

    @Override
    public String value3() {
        return getWordValuePrese();
    }

    @Override
    public Integer value4() {
        return getHomonymNr();
    }

    @Override
    public Integer value5() {
        return getRegYear();
    }

    @Override
    public String[] value6() {
        return getWordTypeCodes();
    }

    @Override
    public MviewWwNewWordMenuRecord value1(Long value) {
        setWordId(value);
        return this;
    }

    @Override
    public MviewWwNewWordMenuRecord value2(String value) {
        setWordValue(value);
        return this;
    }

    @Override
    public MviewWwNewWordMenuRecord value3(String value) {
        setWordValuePrese(value);
        return this;
    }

    @Override
    public MviewWwNewWordMenuRecord value4(Integer value) {
        setHomonymNr(value);
        return this;
    }

    @Override
    public MviewWwNewWordMenuRecord value5(Integer value) {
        setRegYear(value);
        return this;
    }

    @Override
    public MviewWwNewWordMenuRecord value6(String[] value) {
        setWordTypeCodes(value);
        return this;
    }

    @Override
    public MviewWwNewWordMenuRecord values(Long value1, String value2, String value3, Integer value4, Integer value5, String[] value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MviewWwNewWordMenuRecord
     */
    public MviewWwNewWordMenuRecord() {
        super(MviewWwNewWordMenu.MVIEW_WW_NEW_WORD_MENU);
    }

    /**
     * Create a detached, initialised MviewWwNewWordMenuRecord
     */
    public MviewWwNewWordMenuRecord(Long wordId, String wordValue, String wordValuePrese, Integer homonymNr, Integer regYear, String[] wordTypeCodes) {
        super(MviewWwNewWordMenu.MVIEW_WW_NEW_WORD_MENU);

        setWordId(wordId);
        setWordValue(wordValue);
        setWordValuePrese(wordValuePrese);
        setHomonymNr(homonymNr);
        setRegYear(regYear);
        setWordTypeCodes(wordTypeCodes);
    }
}
