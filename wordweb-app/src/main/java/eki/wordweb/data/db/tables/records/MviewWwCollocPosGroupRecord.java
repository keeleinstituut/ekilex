/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables.records;


import eki.wordweb.data.db.tables.MviewWwCollocPosGroup;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwCollocPosGroupRecord extends TableRecordImpl<MviewWwCollocPosGroupRecord> implements Record3<Long, Long, JSON> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.mview_ww_colloc_pos_group.lexeme_id</code>.
     */
    public void setLexemeId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.mview_ww_colloc_pos_group.lexeme_id</code>.
     */
    public Long getLexemeId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.mview_ww_colloc_pos_group.word_id</code>.
     */
    public void setWordId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.mview_ww_colloc_pos_group.word_id</code>.
     */
    public Long getWordId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.mview_ww_colloc_pos_group.pos_groups</code>.
     */
    public void setPosGroups(JSON value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.mview_ww_colloc_pos_group.pos_groups</code>.
     */
    public JSON getPosGroups() {
        return (JSON) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, JSON> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, JSON> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return MviewWwCollocPosGroup.MVIEW_WW_COLLOC_POS_GROUP.LEXEME_ID;
    }

    @Override
    public Field<Long> field2() {
        return MviewWwCollocPosGroup.MVIEW_WW_COLLOC_POS_GROUP.WORD_ID;
    }

    @Override
    public Field<JSON> field3() {
        return MviewWwCollocPosGroup.MVIEW_WW_COLLOC_POS_GROUP.POS_GROUPS;
    }

    @Override
    public Long component1() {
        return getLexemeId();
    }

    @Override
    public Long component2() {
        return getWordId();
    }

    @Override
    public JSON component3() {
        return getPosGroups();
    }

    @Override
    public Long value1() {
        return getLexemeId();
    }

    @Override
    public Long value2() {
        return getWordId();
    }

    @Override
    public JSON value3() {
        return getPosGroups();
    }

    @Override
    public MviewWwCollocPosGroupRecord value1(Long value) {
        setLexemeId(value);
        return this;
    }

    @Override
    public MviewWwCollocPosGroupRecord value2(Long value) {
        setWordId(value);
        return this;
    }

    @Override
    public MviewWwCollocPosGroupRecord value3(JSON value) {
        setPosGroups(value);
        return this;
    }

    @Override
    public MviewWwCollocPosGroupRecord values(Long value1, Long value2, JSON value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MviewWwCollocPosGroupRecord
     */
    public MviewWwCollocPosGroupRecord() {
        super(MviewWwCollocPosGroup.MVIEW_WW_COLLOC_POS_GROUP);
    }

    /**
     * Create a detached, initialised MviewWwCollocPosGroupRecord
     */
    public MviewWwCollocPosGroupRecord(Long lexemeId, Long wordId, JSON posGroups) {
        super(MviewWwCollocPosGroup.MVIEW_WW_COLLOC_POS_GROUP);

        setLexemeId(lexemeId);
        setWordId(wordId);
        setPosGroups(posGroups);
    }
}
