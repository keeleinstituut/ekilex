/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.MviewWwLexemeRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwLexeme extends TableImpl<MviewWwLexemeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.mview_ww_lexeme</code>
     */
    public static final MviewWwLexeme MVIEW_WW_LEXEME = new MviewWwLexeme();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MviewWwLexemeRecord> getRecordType() {
        return MviewWwLexemeRecord.class;
    }

    /**
     * The column <code>public.mview_ww_lexeme.lexeme_id</code>.
     */
    public final TableField<MviewWwLexemeRecord, Long> LEXEME_ID = createField(DSL.name("lexeme_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.word_id</code>.
     */
    public final TableField<MviewWwLexemeRecord, Long> WORD_ID = createField(DSL.name("word_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.meaning_id</code>.
     */
    public final TableField<MviewWwLexemeRecord, Long> MEANING_ID = createField(DSL.name("meaning_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.dataset_code</code>.
     */
    public final TableField<MviewWwLexemeRecord, String> DATASET_CODE = createField(DSL.name("dataset_code"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.mview_ww_lexeme.dataset_name</code>.
     */
    public final TableField<MviewWwLexemeRecord, String> DATASET_NAME = createField(DSL.name("dataset_name"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.dataset_type</code>.
     */
    public final TableField<MviewWwLexemeRecord, String> DATASET_TYPE = createField(DSL.name("dataset_type"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.mview_ww_lexeme.value_state_code</code>.
     */
    public final TableField<MviewWwLexemeRecord, String> VALUE_STATE_CODE = createField(DSL.name("value_state_code"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.mview_ww_lexeme.proficiency_level_code</code>.
     */
    public final TableField<MviewWwLexemeRecord, String> PROFICIENCY_LEVEL_CODE = createField(DSL.name("proficiency_level_code"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.mview_ww_lexeme.reliability</code>.
     */
    public final TableField<MviewWwLexemeRecord, Integer> RELIABILITY = createField(DSL.name("reliability"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.level1</code>.
     */
    public final TableField<MviewWwLexemeRecord, Integer> LEVEL1 = createField(DSL.name("level1"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.level2</code>.
     */
    public final TableField<MviewWwLexemeRecord, Integer> LEVEL2 = createField(DSL.name("level2"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.weight</code>.
     */
    public final TableField<MviewWwLexemeRecord, BigDecimal> WEIGHT = createField(DSL.name("weight"), SQLDataType.NUMERIC(5, 4), this, "");

    /**
     * The column <code>public.mview_ww_lexeme.lexeme_order_by</code>.
     */
    public final TableField<MviewWwLexemeRecord, Long> LEXEME_ORDER_BY = createField(DSL.name("lexeme_order_by"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.dataset_order_by</code>.
     */
    public final TableField<MviewWwLexemeRecord, Long> DATASET_ORDER_BY = createField(DSL.name("dataset_order_by"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.register_codes</code>.
     */
    public final TableField<MviewWwLexemeRecord, String[]> REGISTER_CODES = createField(DSL.name("register_codes"), SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * The column <code>public.mview_ww_lexeme.pos_codes</code>.
     */
    public final TableField<MviewWwLexemeRecord, String[]> POS_CODES = createField(DSL.name("pos_codes"), SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * The column <code>public.mview_ww_lexeme.region_codes</code>.
     */
    public final TableField<MviewWwLexemeRecord, String[]> REGION_CODES = createField(DSL.name("region_codes"), SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * The column <code>public.mview_ww_lexeme.deriv_codes</code>.
     */
    public final TableField<MviewWwLexemeRecord, String[]> DERIV_CODES = createField(DSL.name("deriv_codes"), SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * The column <code>public.mview_ww_lexeme.lexeme_notes</code>.
     */
    public final TableField<MviewWwLexemeRecord, JSON> LEXEME_NOTES = createField(DSL.name("lexeme_notes"), SQLDataType.JSON, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.grammars</code>.
     */
    public final TableField<MviewWwLexemeRecord, JSON> GRAMMARS = createField(DSL.name("grammars"), SQLDataType.JSON, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.governments</code>.
     */
    public final TableField<MviewWwLexemeRecord, JSON> GOVERNMENTS = createField(DSL.name("governments"), SQLDataType.JSON, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.usages</code>.
     */
    public final TableField<MviewWwLexemeRecord, JSON> USAGES = createField(DSL.name("usages"), SQLDataType.JSON, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.source_links</code>.
     */
    public final TableField<MviewWwLexemeRecord, JSON> SOURCE_LINKS = createField(DSL.name("source_links"), SQLDataType.JSON, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.meaning_words</code>.
     */
    public final TableField<MviewWwLexemeRecord, JSON> MEANING_WORDS = createField(DSL.name("meaning_words"), SQLDataType.JSON, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.is_ww_unif</code>.
     */
    public final TableField<MviewWwLexemeRecord, Boolean> IS_WW_UNIF = createField(DSL.name("is_ww_unif"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.is_ww_lite</code>.
     */
    public final TableField<MviewWwLexemeRecord, Boolean> IS_WW_LITE = createField(DSL.name("is_ww_lite"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.mview_ww_lexeme.is_ww_os</code>.
     */
    public final TableField<MviewWwLexemeRecord, Boolean> IS_WW_OS = createField(DSL.name("is_ww_os"), SQLDataType.BOOLEAN, this, "");

    private MviewWwLexeme(Name alias, Table<MviewWwLexemeRecord> aliased) {
        this(alias, aliased, null);
    }

    private MviewWwLexeme(Name alias, Table<MviewWwLexemeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView());
    }

    /**
     * Create an aliased <code>public.mview_ww_lexeme</code> table reference
     */
    public MviewWwLexeme(String alias) {
        this(DSL.name(alias), MVIEW_WW_LEXEME);
    }

    /**
     * Create an aliased <code>public.mview_ww_lexeme</code> table reference
     */
    public MviewWwLexeme(Name alias) {
        this(alias, MVIEW_WW_LEXEME);
    }

    /**
     * Create a <code>public.mview_ww_lexeme</code> table reference
     */
    public MviewWwLexeme() {
        this(DSL.name("mview_ww_lexeme"), null);
    }

    public <O extends Record> MviewWwLexeme(Table<O> child, ForeignKey<O, MviewWwLexemeRecord> key) {
        super(child, key, MVIEW_WW_LEXEME);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public MviewWwLexeme as(String alias) {
        return new MviewWwLexeme(DSL.name(alias), this);
    }

    @Override
    public MviewWwLexeme as(Name alias) {
        return new MviewWwLexeme(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwLexeme rename(String name) {
        return new MviewWwLexeme(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwLexeme rename(Name name) {
        return new MviewWwLexeme(name, null);
    }
}
