/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.MviewWwNewWordMenuRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwNewWordMenu extends TableImpl<MviewWwNewWordMenuRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.mview_ww_new_word_menu</code>
     */
    public static final MviewWwNewWordMenu MVIEW_WW_NEW_WORD_MENU = new MviewWwNewWordMenu();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MviewWwNewWordMenuRecord> getRecordType() {
        return MviewWwNewWordMenuRecord.class;
    }

    /**
     * The column <code>public.mview_ww_new_word_menu.word_id</code>.
     */
    public final TableField<MviewWwNewWordMenuRecord, Long> WORD_ID = createField(DSL.name("word_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_new_word_menu.word</code>.
     */
    public final TableField<MviewWwNewWordMenuRecord, String> WORD = createField(DSL.name("word"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_new_word_menu.word_prese</code>.
     */
    public final TableField<MviewWwNewWordMenuRecord, String> WORD_PRESE = createField(DSL.name("word_prese"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_new_word_menu.homonym_nr</code>.
     */
    public final TableField<MviewWwNewWordMenuRecord, Integer> HOMONYM_NR = createField(DSL.name("homonym_nr"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.mview_ww_new_word_menu.reg_year</code>.
     */
    public final TableField<MviewWwNewWordMenuRecord, Integer> REG_YEAR = createField(DSL.name("reg_year"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.mview_ww_new_word_menu.word_type_codes</code>.
     */
    public final TableField<MviewWwNewWordMenuRecord, String[]> WORD_TYPE_CODES = createField(DSL.name("word_type_codes"), SQLDataType.VARCHAR.getArrayDataType(), this, "");

    private MviewWwNewWordMenu(Name alias, Table<MviewWwNewWordMenuRecord> aliased) {
        this(alias, aliased, null);
    }

    private MviewWwNewWordMenu(Name alias, Table<MviewWwNewWordMenuRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView());
    }

    /**
     * Create an aliased <code>public.mview_ww_new_word_menu</code> table reference
     */
    public MviewWwNewWordMenu(String alias) {
        this(DSL.name(alias), MVIEW_WW_NEW_WORD_MENU);
    }

    /**
     * Create an aliased <code>public.mview_ww_new_word_menu</code> table reference
     */
    public MviewWwNewWordMenu(Name alias) {
        this(alias, MVIEW_WW_NEW_WORD_MENU);
    }

    /**
     * Create a <code>public.mview_ww_new_word_menu</code> table reference
     */
    public MviewWwNewWordMenu() {
        this(DSL.name("mview_ww_new_word_menu"), null);
    }

    public <O extends Record> MviewWwNewWordMenu(Table<O> child, ForeignKey<O, MviewWwNewWordMenuRecord> key) {
        super(child, key, MVIEW_WW_NEW_WORD_MENU);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public MviewWwNewWordMenu as(String alias) {
        return new MviewWwNewWordMenu(DSL.name(alias), this);
    }

    @Override
    public MviewWwNewWordMenu as(Name alias) {
        return new MviewWwNewWordMenu(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwNewWordMenu rename(String name) {
        return new MviewWwNewWordMenu(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwNewWordMenu rename(Name name) {
        return new MviewWwNewWordMenu(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, Integer, Integer, String[]> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
