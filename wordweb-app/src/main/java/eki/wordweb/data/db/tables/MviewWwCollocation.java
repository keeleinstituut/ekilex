/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.MviewWwCollocationRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwCollocation extends TableImpl<MviewWwCollocationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.mview_ww_collocation</code>
     */
    public static final MviewWwCollocation MVIEW_WW_COLLOCATION = new MviewWwCollocation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MviewWwCollocationRecord> getRecordType() {
        return MviewWwCollocationRecord.class;
    }

    /**
     * The column <code>public.mview_ww_collocation.lexeme_id</code>.
     */
    public final TableField<MviewWwCollocationRecord, Long> LEXEME_ID = createField(DSL.name("lexeme_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_collocation.word_id</code>.
     */
    public final TableField<MviewWwCollocationRecord, Long> WORD_ID = createField(DSL.name("word_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_collocation.pos_group_id</code>.
     */
    public final TableField<MviewWwCollocationRecord, Long> POS_GROUP_ID = createField(DSL.name("pos_group_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_collocation.pos_group_code</code>.
     */
    public final TableField<MviewWwCollocationRecord, String> POS_GROUP_CODE = createField(DSL.name("pos_group_code"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.mview_ww_collocation.pos_group_order_by</code>.
     */
    public final TableField<MviewWwCollocationRecord, Long> POS_GROUP_ORDER_BY = createField(DSL.name("pos_group_order_by"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_collocation.rel_group_id</code>.
     */
    public final TableField<MviewWwCollocationRecord, Long> REL_GROUP_ID = createField(DSL.name("rel_group_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_collocation.rel_group_name</code>.
     */
    public final TableField<MviewWwCollocationRecord, String> REL_GROUP_NAME = createField(DSL.name("rel_group_name"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_collocation.rel_group_order_by</code>.
     */
    public final TableField<MviewWwCollocationRecord, Long> REL_GROUP_ORDER_BY = createField(DSL.name("rel_group_order_by"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_collocation.colloc_group_order</code>.
     */
    public final TableField<MviewWwCollocationRecord, Integer> COLLOC_GROUP_ORDER = createField(DSL.name("colloc_group_order"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.mview_ww_collocation.colloc_id</code>.
     */
    public final TableField<MviewWwCollocationRecord, Long> COLLOC_ID = createField(DSL.name("colloc_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_collocation.colloc_value</code>.
     */
    public final TableField<MviewWwCollocationRecord, String> COLLOC_VALUE = createField(DSL.name("colloc_value"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_collocation.colloc_definition</code>.
     */
    public final TableField<MviewWwCollocationRecord, String> COLLOC_DEFINITION = createField(DSL.name("colloc_definition"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_collocation.colloc_usages</code>.
     */
    public final TableField<MviewWwCollocationRecord, String[]> COLLOC_USAGES = createField(DSL.name("colloc_usages"), SQLDataType.CLOB.getArrayDataType(), this, "");

    /**
     * The column <code>public.mview_ww_collocation.colloc_members</code>.
     */
    public final TableField<MviewWwCollocationRecord, JSON> COLLOC_MEMBERS = createField(DSL.name("colloc_members"), SQLDataType.JSON, this, "");

    /**
     * The column <code>public.mview_ww_collocation.complexity</code>.
     */
    public final TableField<MviewWwCollocationRecord, String> COMPLEXITY = createField(DSL.name("complexity"), SQLDataType.VARCHAR(100), this, "");

    private MviewWwCollocation(Name alias, Table<MviewWwCollocationRecord> aliased) {
        this(alias, aliased, null);
    }

    private MviewWwCollocation(Name alias, Table<MviewWwCollocationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView());
    }

    /**
     * Create an aliased <code>public.mview_ww_collocation</code> table reference
     */
    public MviewWwCollocation(String alias) {
        this(DSL.name(alias), MVIEW_WW_COLLOCATION);
    }

    /**
     * Create an aliased <code>public.mview_ww_collocation</code> table reference
     */
    public MviewWwCollocation(Name alias) {
        this(alias, MVIEW_WW_COLLOCATION);
    }

    /**
     * Create a <code>public.mview_ww_collocation</code> table reference
     */
    public MviewWwCollocation() {
        this(DSL.name("mview_ww_collocation"), null);
    }

    public <O extends Record> MviewWwCollocation(Table<O> child, ForeignKey<O, MviewWwCollocationRecord> key) {
        super(child, key, MVIEW_WW_COLLOCATION);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public MviewWwCollocation as(String alias) {
        return new MviewWwCollocation(DSL.name(alias), this);
    }

    @Override
    public MviewWwCollocation as(Name alias) {
        return new MviewWwCollocation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwCollocation rename(String name) {
        return new MviewWwCollocation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwCollocation rename(Name name) {
        return new MviewWwCollocation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<Long, Long, Long, String, Long, Long, String, Long, Integer, Long, String, String, String[], JSON, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
