/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Keys;
import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.SimilarityJudgementDataRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SimilarityJudgementData extends TableImpl<SimilarityJudgementDataRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.similarity_judgement_data</code>
     */
    public static final SimilarityJudgementData SIMILARITY_JUDGEMENT_DATA = new SimilarityJudgementData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SimilarityJudgementDataRecord> getRecordType() {
        return SimilarityJudgementDataRecord.class;
    }

    /**
     * The column <code>public.similarity_judgement_data.id</code>.
     */
    public final TableField<SimilarityJudgementDataRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.similarity_judgement_data.meaning_id</code>.
     */
    public final TableField<SimilarityJudgementDataRecord, Long> MEANING_ID = createField(DSL.name("meaning_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.similarity_judgement_data.word</code>.
     */
    public final TableField<SimilarityJudgementDataRecord, String> WORD = createField(DSL.name("word"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.similarity_judgement_data.lang</code>.
     */
    public final TableField<SimilarityJudgementDataRecord, String> LANG = createField(DSL.name("lang"), SQLDataType.CHAR(3).nullable(false), this, "");

    /**
     * The column <code>public.similarity_judgement_data.dataset_code</code>.
     */
    public final TableField<SimilarityJudgementDataRecord, String> DATASET_CODE = createField(DSL.name("dataset_code"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    private SimilarityJudgementData(Name alias, Table<SimilarityJudgementDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private SimilarityJudgementData(Name alias, Table<SimilarityJudgementDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.similarity_judgement_data</code> table reference
     */
    public SimilarityJudgementData(String alias) {
        this(DSL.name(alias), SIMILARITY_JUDGEMENT_DATA);
    }

    /**
     * Create an aliased <code>public.similarity_judgement_data</code> table reference
     */
    public SimilarityJudgementData(Name alias) {
        this(alias, SIMILARITY_JUDGEMENT_DATA);
    }

    /**
     * Create a <code>public.similarity_judgement_data</code> table reference
     */
    public SimilarityJudgementData() {
        this(DSL.name("similarity_judgement_data"), null);
    }

    public <O extends Record> SimilarityJudgementData(Table<O> child, ForeignKey<O, SimilarityJudgementDataRecord> key) {
        super(child, key, SIMILARITY_JUDGEMENT_DATA);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<SimilarityJudgementDataRecord, Long> getIdentity() {
        return (Identity<SimilarityJudgementDataRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<SimilarityJudgementDataRecord> getPrimaryKey() {
        return Keys.SIMILARITY_JUDGEMENT_DATA_PKEY;
    }

    @Override
    public List<UniqueKey<SimilarityJudgementDataRecord>> getKeys() {
        return Arrays.<UniqueKey<SimilarityJudgementDataRecord>>asList(Keys.SIMILARITY_JUDGEMENT_DATA_PKEY);
    }

    @Override
    public SimilarityJudgementData as(String alias) {
        return new SimilarityJudgementData(DSL.name(alias), this);
    }

    @Override
    public SimilarityJudgementData as(Name alias) {
        return new SimilarityJudgementData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SimilarityJudgementData rename(String name) {
        return new SimilarityJudgementData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SimilarityJudgementData rename(Name name) {
        return new SimilarityJudgementData(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
