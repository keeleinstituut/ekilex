/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.OsWordEkiRecommendationRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OsWordEkiRecommendation extends TableImpl<OsWordEkiRecommendationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.os_word_eki_recommendation</code>
     */
    public static final OsWordEkiRecommendation OS_WORD_EKI_RECOMMENDATION = new OsWordEkiRecommendation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OsWordEkiRecommendationRecord> getRecordType() {
        return OsWordEkiRecommendationRecord.class;
    }

    /**
     * The column <code>public.os_word_eki_recommendation.word_id</code>.
     */
    public final TableField<OsWordEkiRecommendationRecord, Long> WORD_ID = createField(DSL.name("word_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.os_word_eki_recommendation.word_eki_recommendations</code>.
     */
    public final TableField<OsWordEkiRecommendationRecord, JSON> WORD_EKI_RECOMMENDATIONS = createField(DSL.name("word_eki_recommendations"), SQLDataType.JSON.nullable(false), this, "");

    private OsWordEkiRecommendation(Name alias, Table<OsWordEkiRecommendationRecord> aliased) {
        this(alias, aliased, null);
    }

    private OsWordEkiRecommendation(Name alias, Table<OsWordEkiRecommendationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.os_word_eki_recommendation</code> table reference
     */
    public OsWordEkiRecommendation(String alias) {
        this(DSL.name(alias), OS_WORD_EKI_RECOMMENDATION);
    }

    /**
     * Create an aliased <code>public.os_word_eki_recommendation</code> table reference
     */
    public OsWordEkiRecommendation(Name alias) {
        this(alias, OS_WORD_EKI_RECOMMENDATION);
    }

    /**
     * Create a <code>public.os_word_eki_recommendation</code> table reference
     */
    public OsWordEkiRecommendation() {
        this(DSL.name("os_word_eki_recommendation"), null);
    }

    public <O extends Record> OsWordEkiRecommendation(Table<O> child, ForeignKey<O, OsWordEkiRecommendationRecord> key) {
        super(child, key, OS_WORD_EKI_RECOMMENDATION);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public OsWordEkiRecommendation as(String alias) {
        return new OsWordEkiRecommendation(DSL.name(alias), this);
    }

    @Override
    public OsWordEkiRecommendation as(Name alias) {
        return new OsWordEkiRecommendation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OsWordEkiRecommendation rename(String name) {
        return new OsWordEkiRecommendation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OsWordEkiRecommendation rename(Name name) {
        return new OsWordEkiRecommendation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, JSON> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
