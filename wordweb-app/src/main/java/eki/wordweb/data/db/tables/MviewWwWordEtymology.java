/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.MviewWwWordEtymologyRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwWordEtymology extends TableImpl<MviewWwWordEtymologyRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.mview_ww_word_etymology</code>
     */
    public static final MviewWwWordEtymology MVIEW_WW_WORD_ETYMOLOGY = new MviewWwWordEtymology();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MviewWwWordEtymologyRecord> getRecordType() {
        return MviewWwWordEtymologyRecord.class;
    }

    /**
     * The column <code>public.mview_ww_word_etymology.word_id</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, Long> WORD_ID = createField(DSL.name("word_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_word_etymology.word_etym_id</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, Long> WORD_ETYM_ID = createField(DSL.name("word_etym_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_word_etymology.word_etym_word_id</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, Long> WORD_ETYM_WORD_ID = createField(DSL.name("word_etym_word_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_word_etymology.word_etym_word_value</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, String> WORD_ETYM_WORD_VALUE = createField(DSL.name("word_etym_word_value"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_word_etymology.word_etym_word_lang</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, String> WORD_ETYM_WORD_LANG = createField(DSL.name("word_etym_word_lang"), SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>public.mview_ww_word_etymology.etymology_type_code</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, String> ETYMOLOGY_TYPE_CODE = createField(DSL.name("etymology_type_code"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.mview_ww_word_etymology.etymology_year</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, String> ETYMOLOGY_YEAR = createField(DSL.name("etymology_year"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_word_etymology.word_etym_comment</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, String> WORD_ETYM_COMMENT = createField(DSL.name("word_etym_comment"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_word_etymology.word_etym_is_questionable</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, Boolean> WORD_ETYM_IS_QUESTIONABLE = createField(DSL.name("word_etym_is_questionable"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.mview_ww_word_etymology.word_etym_order_by</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, Long> WORD_ETYM_ORDER_BY = createField(DSL.name("word_etym_order_by"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_word_etymology.word_etym_meaning_word_values</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, String[]> WORD_ETYM_MEANING_WORD_VALUES = createField(DSL.name("word_etym_meaning_word_values"), SQLDataType.CLOB.getArrayDataType(), this, "");

    /**
     * The column <code>public.mview_ww_word_etymology.word_etym_relations</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, JSON> WORD_ETYM_RELATIONS = createField(DSL.name("word_etym_relations"), SQLDataType.JSON, this, "");

    /**
     * The column <code>public.mview_ww_word_etymology.source_links</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, JSON> SOURCE_LINKS = createField(DSL.name("source_links"), SQLDataType.JSON, this, "");

    private MviewWwWordEtymology(Name alias, Table<MviewWwWordEtymologyRecord> aliased) {
        this(alias, aliased, null);
    }

    private MviewWwWordEtymology(Name alias, Table<MviewWwWordEtymologyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView());
    }

    /**
     * Create an aliased <code>public.mview_ww_word_etymology</code> table reference
     */
    public MviewWwWordEtymology(String alias) {
        this(DSL.name(alias), MVIEW_WW_WORD_ETYMOLOGY);
    }

    /**
     * Create an aliased <code>public.mview_ww_word_etymology</code> table reference
     */
    public MviewWwWordEtymology(Name alias) {
        this(alias, MVIEW_WW_WORD_ETYMOLOGY);
    }

    /**
     * Create a <code>public.mview_ww_word_etymology</code> table reference
     */
    public MviewWwWordEtymology() {
        this(DSL.name("mview_ww_word_etymology"), null);
    }

    public <O extends Record> MviewWwWordEtymology(Table<O> child, ForeignKey<O, MviewWwWordEtymologyRecord> key) {
        super(child, key, MVIEW_WW_WORD_ETYMOLOGY);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public MviewWwWordEtymology as(String alias) {
        return new MviewWwWordEtymology(DSL.name(alias), this);
    }

    @Override
    public MviewWwWordEtymology as(Name alias) {
        return new MviewWwWordEtymology(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwWordEtymology rename(String name) {
        return new MviewWwWordEtymology(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwWordEtymology rename(Name name) {
        return new MviewWwWordEtymology(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, Long, Long, String, String, String, String, String, Boolean, Long, String[], JSON, JSON> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
