/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.MviewWwWordRecord;
import eki.wordweb.data.db.udt.records.TypeLangDatasetPublishingRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwWord extends TableImpl<MviewWwWordRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.mview_ww_word</code>
     */
    public static final MviewWwWord MVIEW_WW_WORD = new MviewWwWord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MviewWwWordRecord> getRecordType() {
        return MviewWwWordRecord.class;
    }

    /**
     * The column <code>public.mview_ww_word.word_id</code>.
     */
    public final TableField<MviewWwWordRecord, Long> WORD_ID = createField(DSL.name("word_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_word.value</code>.
     */
    public final TableField<MviewWwWordRecord, String> VALUE = createField(DSL.name("value"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_word.value_prese</code>.
     */
    public final TableField<MviewWwWordRecord, String> VALUE_PRESE = createField(DSL.name("value_prese"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_word.value_as_word</code>.
     */
    public final TableField<MviewWwWordRecord, String> VALUE_AS_WORD = createField(DSL.name("value_as_word"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_word.lang</code>.
     */
    public final TableField<MviewWwWordRecord, String> LANG = createField(DSL.name("lang"), SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>public.mview_ww_word.lang_filt</code>.
     */
    public final TableField<MviewWwWordRecord, String> LANG_FILT = createField(DSL.name("lang_filt"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.mview_ww_word.lang_order_by</code>.
     */
    public final TableField<MviewWwWordRecord, Long> LANG_ORDER_BY = createField(DSL.name("lang_order_by"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_word.homonym_nr</code>.
     */
    public final TableField<MviewWwWordRecord, Integer> HOMONYM_NR = createField(DSL.name("homonym_nr"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.mview_ww_word.display_morph_code</code>.
     */
    public final TableField<MviewWwWordRecord, String> DISPLAY_MORPH_CODE = createField(DSL.name("display_morph_code"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.mview_ww_word.gender_code</code>.
     */
    public final TableField<MviewWwWordRecord, String> GENDER_CODE = createField(DSL.name("gender_code"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.mview_ww_word.aspect_code</code>.
     */
    public final TableField<MviewWwWordRecord, String> ASPECT_CODE = createField(DSL.name("aspect_code"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.mview_ww_word.vocal_form</code>.
     */
    public final TableField<MviewWwWordRecord, String> VOCAL_FORM = createField(DSL.name("vocal_form"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_word.morph_comment</code>.
     */
    public final TableField<MviewWwWordRecord, String> MORPH_COMMENT = createField(DSL.name("morph_comment"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_word.reg_year</code>.
     */
    public final TableField<MviewWwWordRecord, Integer> REG_YEAR = createField(DSL.name("reg_year"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.mview_ww_word.manual_event_on</code>.
     */
    public final TableField<MviewWwWordRecord, LocalDateTime> MANUAL_EVENT_ON = createField(DSL.name("manual_event_on"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>public.mview_ww_word.last_activity_event_on</code>.
     */
    public final TableField<MviewWwWordRecord, LocalDateTime> LAST_ACTIVITY_EVENT_ON = createField(DSL.name("last_activity_event_on"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>public.mview_ww_word.word_type_codes</code>.
     */
    public final TableField<MviewWwWordRecord, String[]> WORD_TYPE_CODES = createField(DSL.name("word_type_codes"), SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * The column <code>public.mview_ww_word.meaning_words</code>.
     */
    public final TableField<MviewWwWordRecord, JSON> MEANING_WORDS = createField(DSL.name("meaning_words"), SQLDataType.JSON, this, "");

    /**
     * The column <code>public.mview_ww_word.definitions</code>.
     */
    public final TableField<MviewWwWordRecord, JSON> DEFINITIONS = createField(DSL.name("definitions"), SQLDataType.JSON, this, "");

    /**
     * The column <code>public.mview_ww_word.word_os_recommendation</code>.
     */
    public final TableField<MviewWwWordRecord, JSON> WORD_OS_RECOMMENDATION = createField(DSL.name("word_os_recommendation"), SQLDataType.JSON, this, "");

    /**
     * The column <code>public.mview_ww_word.freq_value</code>.
     */
    public final TableField<MviewWwWordRecord, BigDecimal> FREQ_VALUE = createField(DSL.name("freq_value"), SQLDataType.NUMERIC(12, 7), this, "");

    /**
     * The column <code>public.mview_ww_word.freq_rank</code>.
     */
    public final TableField<MviewWwWordRecord, Long> FREQ_RANK = createField(DSL.name("freq_rank"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_word.forms_exist</code>.
     */
    public final TableField<MviewWwWordRecord, Boolean> FORMS_EXIST = createField(DSL.name("forms_exist"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.mview_ww_word.min_ds_order_by</code>.
     */
    public final TableField<MviewWwWordRecord, Long> MIN_DS_ORDER_BY = createField(DSL.name("min_ds_order_by"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_word.word_type_order_by</code>.
     */
    public final TableField<MviewWwWordRecord, Integer> WORD_TYPE_ORDER_BY = createField(DSL.name("word_type_order_by"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.mview_ww_word.lang_ds_pubs</code>.
     */
    public final TableField<MviewWwWordRecord, TypeLangDatasetPublishingRecord[]> LANG_DS_PUBS = createField(DSL.name("lang_ds_pubs"), eki.wordweb.data.db.udt.TypeLangDatasetPublishing.TYPE_LANG_DATASET_PUBLISHING.getDataType().getArrayDataType(), this, "");

    private MviewWwWord(Name alias, Table<MviewWwWordRecord> aliased) {
        this(alias, aliased, null);
    }

    private MviewWwWord(Name alias, Table<MviewWwWordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView());
    }

    /**
     * Create an aliased <code>public.mview_ww_word</code> table reference
     */
    public MviewWwWord(String alias) {
        this(DSL.name(alias), MVIEW_WW_WORD);
    }

    /**
     * Create an aliased <code>public.mview_ww_word</code> table reference
     */
    public MviewWwWord(Name alias) {
        this(alias, MVIEW_WW_WORD);
    }

    /**
     * Create a <code>public.mview_ww_word</code> table reference
     */
    public MviewWwWord() {
        this(DSL.name("mview_ww_word"), null);
    }

    public <O extends Record> MviewWwWord(Table<O> child, ForeignKey<O, MviewWwWordRecord> key) {
        super(child, key, MVIEW_WW_WORD);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public MviewWwWord as(String alias) {
        return new MviewWwWord(DSL.name(alias), this);
    }

    @Override
    public MviewWwWord as(Name alias) {
        return new MviewWwWord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwWord rename(String name) {
        return new MviewWwWord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwWord rename(Name name) {
        return new MviewWwWord(name, null);
    }
}
