/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.MviewWwDatasetWordMenuRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwDatasetWordMenu extends TableImpl<MviewWwDatasetWordMenuRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.mview_ww_dataset_word_menu</code>
     */
    public static final MviewWwDatasetWordMenu MVIEW_WW_DATASET_WORD_MENU = new MviewWwDatasetWordMenu();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MviewWwDatasetWordMenuRecord> getRecordType() {
        return MviewWwDatasetWordMenuRecord.class;
    }

    /**
     * The column <code>public.mview_ww_dataset_word_menu.dataset_code</code>.
     */
    public final TableField<MviewWwDatasetWordMenuRecord, String> DATASET_CODE = createField(DSL.name("dataset_code"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.mview_ww_dataset_word_menu.first_letter</code>.
     */
    public final TableField<MviewWwDatasetWordMenuRecord, String> FIRST_LETTER = createField(DSL.name("first_letter"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.mview_ww_dataset_word_menu.words</code>.
     */
    public final TableField<MviewWwDatasetWordMenuRecord, String[]> WORDS = createField(DSL.name("words"), SQLDataType.CLOB.getArrayDataType(), this, "");

    private MviewWwDatasetWordMenu(Name alias, Table<MviewWwDatasetWordMenuRecord> aliased) {
        this(alias, aliased, null);
    }

    private MviewWwDatasetWordMenu(Name alias, Table<MviewWwDatasetWordMenuRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView());
    }

    /**
     * Create an aliased <code>public.mview_ww_dataset_word_menu</code> table reference
     */
    public MviewWwDatasetWordMenu(String alias) {
        this(DSL.name(alias), MVIEW_WW_DATASET_WORD_MENU);
    }

    /**
     * Create an aliased <code>public.mview_ww_dataset_word_menu</code> table reference
     */
    public MviewWwDatasetWordMenu(Name alias) {
        this(alias, MVIEW_WW_DATASET_WORD_MENU);
    }

    /**
     * Create a <code>public.mview_ww_dataset_word_menu</code> table reference
     */
    public MviewWwDatasetWordMenu() {
        this(DSL.name("mview_ww_dataset_word_menu"), null);
    }

    public <O extends Record> MviewWwDatasetWordMenu(Table<O> child, ForeignKey<O, MviewWwDatasetWordMenuRecord> key) {
        super(child, key, MVIEW_WW_DATASET_WORD_MENU);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public MviewWwDatasetWordMenu as(String alias) {
        return new MviewWwDatasetWordMenu(DSL.name(alias), this);
    }

    @Override
    public MviewWwDatasetWordMenu as(Name alias) {
        return new MviewWwDatasetWordMenu(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwDatasetWordMenu rename(String name) {
        return new MviewWwDatasetWordMenu(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwDatasetWordMenu rename(Name name) {
        return new MviewWwDatasetWordMenu(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String[]> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
