/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.MviewOdWordOdUsageRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewOdWordOdUsage extends TableImpl<MviewOdWordOdUsageRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.mview_od_word_od_usage</code>
     */
    public static final MviewOdWordOdUsage MVIEW_OD_WORD_OD_USAGE = new MviewOdWordOdUsage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MviewOdWordOdUsageRecord> getRecordType() {
        return MviewOdWordOdUsageRecord.class;
    }

    /**
     * The column <code>public.mview_od_word_od_usage.word_id</code>.
     */
    public final TableField<MviewOdWordOdUsageRecord, Long> WORD_ID = createField(DSL.name("word_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_od_word_od_usage.word_od_usages</code>.
     */
    public final TableField<MviewOdWordOdUsageRecord, JSON> WORD_OD_USAGES = createField(DSL.name("word_od_usages"), SQLDataType.JSON, this, "");

    private MviewOdWordOdUsage(Name alias, Table<MviewOdWordOdUsageRecord> aliased) {
        this(alias, aliased, null);
    }

    private MviewOdWordOdUsage(Name alias, Table<MviewOdWordOdUsageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView());
    }

    /**
     * Create an aliased <code>public.mview_od_word_od_usage</code> table reference
     */
    public MviewOdWordOdUsage(String alias) {
        this(DSL.name(alias), MVIEW_OD_WORD_OD_USAGE);
    }

    /**
     * Create an aliased <code>public.mview_od_word_od_usage</code> table reference
     */
    public MviewOdWordOdUsage(Name alias) {
        this(alias, MVIEW_OD_WORD_OD_USAGE);
    }

    /**
     * Create a <code>public.mview_od_word_od_usage</code> table reference
     */
    public MviewOdWordOdUsage() {
        this(DSL.name("mview_od_word_od_usage"), null);
    }

    public <O extends Record> MviewOdWordOdUsage(Table<O> child, ForeignKey<O, MviewOdWordOdUsageRecord> key) {
        super(child, key, MVIEW_OD_WORD_OD_USAGE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public MviewOdWordOdUsage as(String alias) {
        return new MviewOdWordOdUsage(DSL.name(alias), this);
    }

    @Override
    public MviewOdWordOdUsage as(Name alias) {
        return new MviewOdWordOdUsage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewOdWordOdUsage rename(String name) {
        return new MviewOdWordOdUsage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewOdWordOdUsage rename(Name name) {
        return new MviewOdWordOdUsage(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, JSON> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
