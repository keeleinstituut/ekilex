/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.MviewWwDefinitionSourceLinkRecord;
import eki.wordweb.data.db.udt.records.TypeSourceLinkRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwDefinitionSourceLink extends TableImpl<MviewWwDefinitionSourceLinkRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.mview_ww_definition_source_link</code>
     */
    public static final MviewWwDefinitionSourceLink MVIEW_WW_DEFINITION_SOURCE_LINK = new MviewWwDefinitionSourceLink();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MviewWwDefinitionSourceLinkRecord> getRecordType() {
        return MviewWwDefinitionSourceLinkRecord.class;
    }

    /**
     * The column <code>public.mview_ww_definition_source_link.meaning_id</code>.
     */
    public final TableField<MviewWwDefinitionSourceLinkRecord, Long> MEANING_ID = createField(DSL.name("meaning_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_definition_source_link.source_links</code>.
     */
    public final TableField<MviewWwDefinitionSourceLinkRecord, TypeSourceLinkRecord[]> SOURCE_LINKS = createField(DSL.name("source_links"), eki.wordweb.data.db.udt.TypeSourceLink.TYPE_SOURCE_LINK.getDataType().getArrayDataType(), this, "");

    private MviewWwDefinitionSourceLink(Name alias, Table<MviewWwDefinitionSourceLinkRecord> aliased) {
        this(alias, aliased, null);
    }

    private MviewWwDefinitionSourceLink(Name alias, Table<MviewWwDefinitionSourceLinkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView());
    }

    /**
     * Create an aliased <code>public.mview_ww_definition_source_link</code> table reference
     */
    public MviewWwDefinitionSourceLink(String alias) {
        this(DSL.name(alias), MVIEW_WW_DEFINITION_SOURCE_LINK);
    }

    /**
     * Create an aliased <code>public.mview_ww_definition_source_link</code> table reference
     */
    public MviewWwDefinitionSourceLink(Name alias) {
        this(alias, MVIEW_WW_DEFINITION_SOURCE_LINK);
    }

    /**
     * Create a <code>public.mview_ww_definition_source_link</code> table reference
     */
    public MviewWwDefinitionSourceLink() {
        this(DSL.name("mview_ww_definition_source_link"), null);
    }

    public <O extends Record> MviewWwDefinitionSourceLink(Table<O> child, ForeignKey<O, MviewWwDefinitionSourceLinkRecord> key) {
        super(child, key, MVIEW_WW_DEFINITION_SOURCE_LINK);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public MviewWwDefinitionSourceLink as(String alias) {
        return new MviewWwDefinitionSourceLink(DSL.name(alias), this);
    }

    @Override
    public MviewWwDefinitionSourceLink as(Name alias) {
        return new MviewWwDefinitionSourceLink(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwDefinitionSourceLink rename(String name) {
        return new MviewWwDefinitionSourceLink(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwDefinitionSourceLink rename(Name name) {
        return new MviewWwDefinitionSourceLink(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, TypeSourceLinkRecord[]> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
