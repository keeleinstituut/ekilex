/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import eki.wordweb.data.db.tables.LexicalDecisionResult;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LexicalDecisionResultRecord extends UpdatableRecordImpl<LexicalDecisionResultRecord> implements Record7<Long, Long, String, String, Boolean, Long, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.lexical_decision_result.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.lexical_decision_result.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.lexical_decision_result.data_id</code>.
     */
    public void setDataId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.lexical_decision_result.data_id</code>.
     */
    public Long getDataId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.lexical_decision_result.remote_addr</code>.
     */
    public void setRemoteAddr(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.lexical_decision_result.remote_addr</code>.
     */
    public String getRemoteAddr() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.lexical_decision_result.session_id</code>.
     */
    public void setSessionId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.lexical_decision_result.session_id</code>.
     */
    public String getSessionId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.lexical_decision_result.answer</code>.
     */
    public void setAnswer(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.lexical_decision_result.answer</code>.
     */
    public Boolean getAnswer() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.lexical_decision_result.delay</code>.
     */
    public void setDelay(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.lexical_decision_result.delay</code>.
     */
    public Long getDelay() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.lexical_decision_result.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.lexical_decision_result.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, String, String, Boolean, Long, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, String, String, Boolean, Long, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return LexicalDecisionResult.LEXICAL_DECISION_RESULT.ID;
    }

    @Override
    public Field<Long> field2() {
        return LexicalDecisionResult.LEXICAL_DECISION_RESULT.DATA_ID;
    }

    @Override
    public Field<String> field3() {
        return LexicalDecisionResult.LEXICAL_DECISION_RESULT.REMOTE_ADDR;
    }

    @Override
    public Field<String> field4() {
        return LexicalDecisionResult.LEXICAL_DECISION_RESULT.SESSION_ID;
    }

    @Override
    public Field<Boolean> field5() {
        return LexicalDecisionResult.LEXICAL_DECISION_RESULT.ANSWER;
    }

    @Override
    public Field<Long> field6() {
        return LexicalDecisionResult.LEXICAL_DECISION_RESULT.DELAY;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return LexicalDecisionResult.LEXICAL_DECISION_RESULT.CREATED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getDataId();
    }

    @Override
    public String component3() {
        return getRemoteAddr();
    }

    @Override
    public String component4() {
        return getSessionId();
    }

    @Override
    public Boolean component5() {
        return getAnswer();
    }

    @Override
    public Long component6() {
        return getDelay();
    }

    @Override
    public LocalDateTime component7() {
        return getCreated();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getDataId();
    }

    @Override
    public String value3() {
        return getRemoteAddr();
    }

    @Override
    public String value4() {
        return getSessionId();
    }

    @Override
    public Boolean value5() {
        return getAnswer();
    }

    @Override
    public Long value6() {
        return getDelay();
    }

    @Override
    public LocalDateTime value7() {
        return getCreated();
    }

    @Override
    public LexicalDecisionResultRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public LexicalDecisionResultRecord value2(Long value) {
        setDataId(value);
        return this;
    }

    @Override
    public LexicalDecisionResultRecord value3(String value) {
        setRemoteAddr(value);
        return this;
    }

    @Override
    public LexicalDecisionResultRecord value4(String value) {
        setSessionId(value);
        return this;
    }

    @Override
    public LexicalDecisionResultRecord value5(Boolean value) {
        setAnswer(value);
        return this;
    }

    @Override
    public LexicalDecisionResultRecord value6(Long value) {
        setDelay(value);
        return this;
    }

    @Override
    public LexicalDecisionResultRecord value7(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public LexicalDecisionResultRecord values(Long value1, Long value2, String value3, String value4, Boolean value5, Long value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LexicalDecisionResultRecord
     */
    public LexicalDecisionResultRecord() {
        super(LexicalDecisionResult.LEXICAL_DECISION_RESULT);
    }

    /**
     * Create a detached, initialised LexicalDecisionResultRecord
     */
    public LexicalDecisionResultRecord(Long id, Long dataId, String remoteAddr, String sessionId, Boolean answer, Long delay, LocalDateTime created) {
        super(LexicalDecisionResult.LEXICAL_DECISION_RESULT);

        setId(id);
        setDataId(dataId);
        setRemoteAddr(remoteAddr);
        setSessionId(sessionId);
        setAnswer(answer);
        setDelay(delay);
        setCreated(created);
    }
}
