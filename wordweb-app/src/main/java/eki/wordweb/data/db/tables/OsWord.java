/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.OsWordRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OsWord extends TableImpl<OsWordRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.os_word</code>
     */
    public static final OsWord OS_WORD = new OsWord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OsWordRecord> getRecordType() {
        return OsWordRecord.class;
    }

    /**
     * The column <code>public.os_word.word_id</code>.
     */
    public final TableField<OsWordRecord, Long> WORD_ID = createField(DSL.name("word_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.os_word.value</code>.
     */
    public final TableField<OsWordRecord, String> VALUE = createField(DSL.name("value"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.os_word.value_prese</code>.
     */
    public final TableField<OsWordRecord, String> VALUE_PRESE = createField(DSL.name("value_prese"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.os_word.value_as_word</code>.
     */
    public final TableField<OsWordRecord, String> VALUE_AS_WORD = createField(DSL.name("value_as_word"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.os_word.homonym_nr</code>.
     */
    public final TableField<OsWordRecord, Integer> HOMONYM_NR = createField(DSL.name("homonym_nr"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.os_word.display_morph_code</code>.
     */
    public final TableField<OsWordRecord, String> DISPLAY_MORPH_CODE = createField(DSL.name("display_morph_code"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.os_word.word_type_codes</code>.
     */
    public final TableField<OsWordRecord, String[]> WORD_TYPE_CODES = createField(DSL.name("word_type_codes"), SQLDataType.VARCHAR(100).getArrayDataType(), this, "");

    private OsWord(Name alias, Table<OsWordRecord> aliased) {
        this(alias, aliased, null);
    }

    private OsWord(Name alias, Table<OsWordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.os_word</code> table reference
     */
    public OsWord(String alias) {
        this(DSL.name(alias), OS_WORD);
    }

    /**
     * Create an aliased <code>public.os_word</code> table reference
     */
    public OsWord(Name alias) {
        this(alias, OS_WORD);
    }

    /**
     * Create a <code>public.os_word</code> table reference
     */
    public OsWord() {
        this(DSL.name("os_word"), null);
    }

    public <O extends Record> OsWord(Table<O> child, ForeignKey<O, OsWordRecord> key) {
        super(child, key, OS_WORD);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public OsWord as(String alias) {
        return new OsWord(DSL.name(alias), this);
    }

    @Override
    public OsWord as(Name alias) {
        return new OsWord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OsWord rename(String name) {
        return new OsWord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OsWord rename(Name name) {
        return new OsWord(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, Integer, String, String[]> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
