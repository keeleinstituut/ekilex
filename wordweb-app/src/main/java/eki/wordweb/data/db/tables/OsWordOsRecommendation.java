/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.OsWordOsRecommendationRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OsWordOsRecommendation extends TableImpl<OsWordOsRecommendationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.os_word_os_recommendation</code>
     */
    public static final OsWordOsRecommendation OS_WORD_OS_RECOMMENDATION = new OsWordOsRecommendation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OsWordOsRecommendationRecord> getRecordType() {
        return OsWordOsRecommendationRecord.class;
    }

    /**
     * The column <code>public.os_word_os_recommendation.word_id</code>.
     */
    public final TableField<OsWordOsRecommendationRecord, Long> WORD_ID = createField(DSL.name("word_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.os_word_os_recommendation.word_os_recommendations</code>.
     */
    public final TableField<OsWordOsRecommendationRecord, JSON> WORD_OS_RECOMMENDATIONS = createField(DSL.name("word_os_recommendations"), SQLDataType.JSON.nullable(false), this, "");

    private OsWordOsRecommendation(Name alias, Table<OsWordOsRecommendationRecord> aliased) {
        this(alias, aliased, null);
    }

    private OsWordOsRecommendation(Name alias, Table<OsWordOsRecommendationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.os_word_os_recommendation</code> table reference
     */
    public OsWordOsRecommendation(String alias) {
        this(DSL.name(alias), OS_WORD_OS_RECOMMENDATION);
    }

    /**
     * Create an aliased <code>public.os_word_os_recommendation</code> table reference
     */
    public OsWordOsRecommendation(Name alias) {
        this(alias, OS_WORD_OS_RECOMMENDATION);
    }

    /**
     * Create a <code>public.os_word_os_recommendation</code> table reference
     */
    public OsWordOsRecommendation() {
        this(DSL.name("os_word_os_recommendation"), null);
    }

    public <O extends Record> OsWordOsRecommendation(Table<O> child, ForeignKey<O, OsWordOsRecommendationRecord> key) {
        super(child, key, OS_WORD_OS_RECOMMENDATION);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public OsWordOsRecommendation as(String alias) {
        return new OsWordOsRecommendation(DSL.name(alias), this);
    }

    @Override
    public OsWordOsRecommendation as(Name alias) {
        return new OsWordOsRecommendation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OsWordOsRecommendation rename(String name) {
        return new OsWordOsRecommendation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OsWordOsRecommendation rename(Name name) {
        return new OsWordOsRecommendation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, JSON> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
