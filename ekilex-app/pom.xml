<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>eki.ekilex</groupId>
		<artifactId>eki-root</artifactId>
		<version>1.33-SNAPSHOT</version>
	</parent>

	<groupId>eki.ekilex</groupId>
	<artifactId>ekilex-app</artifactId>
	<version>1.33-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Ekilex App</name>

	<developers>
		<developer>
			<id>martin</id>
			<name>Martin Laubre</name>
			<email>martin.laubre@tripledev.ee</email>
			<organization>TripleDev</organization>
		</developer>
		<developer>
			<id>yogesh</id>
			<name>Yogesh Sharma</name>
			<email>yogesh.sharma@tripledev.ee</email>
			<organization>TripleDev</organization>
		</developer>
	</developers>

	<profiles>
		<profile>
			<id>webapp</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<spring.boot.mainclass>eki.ekilex.app.EkilexApplication</spring.boot.mainclass>
			</properties>
		</profile>
		<profile>
			<id>dsimp</id>
			<properties>
				<spring.boot.mainclass>eki.ekilex.cli.DatasetImporter</spring.boot.mainclass>
			</properties>
		</profile>
		<profile>
			<id>dsexp</id>
			<properties>
				<spring.boot.mainclass>eki.ekilex.cli.DatasetExporter</spring.boot.mainclass>
			</properties>
		</profile>
		<profile>
			<id>plimp</id>
			<properties>
				<spring.boot.mainclass>eki.ekilex.cli.LexemeProficiencyLevelImporter</spring.boot.mainclass>
			</properties>
		</profile>
		<profile>
			<id>mfimp</id>
			<properties>
				<spring.boot.mainclass>eki.ekilex.cli.MeaningForumImporter</spring.boot.mainclass>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>ekilex-app</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<mainClass>${spring.boot.mainclass}</mainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>src/main/resources/application.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<skip>${skip.jooq.generation}</skip>
							<jdbc>
								<driver>org.postgresql.Driver</driver>
								<url>${spring.datasource.url}</url>
								<user>${spring.datasource.username}</user>
								<password>${spring.datasource.password}</password>
							</jdbc>
							<generator>
								<database>
									<name>org.jooq.meta.postgres.PostgresDatabase</name>
									<includes>.*</includes>
									<includeIndexes>false</includeIndexes>
									<includeSystemIndexes>false</includeSystemIndexes>
									<excludes></excludes>
									<inputSchema>public</inputSchema>
								</database>
								<generate>
									<javaTimeTypes>false</javaTimeTypes>
								</generate>
								<target>
									<packageName>eki.ekilex.data.db</packageName>
									<directory>src/main/java</directory>
								</target>
							</generator>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>${postgresql.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- eki -->
		<dependency>
			<groupId>eki.common</groupId>
			<artifactId>eki-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity5</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>com.flipkart.zjsonpatch</groupId>
			<artifactId>zjsonpatch</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
		</dependency>
		<dependency>
			<groupId>com.atlassian.commonmark</groupId>
			<artifactId>commonmark</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.truth</groupId>
			<artifactId>truth</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>15</java.version>
		<skip.jooq.generation>true</skip.jooq.generation>
		<start-class>${spring.boot.mainclass}</start-class>
	</properties>
</project>
