/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main.tables;


import eki.ekilex.data.db.main.Public;
import eki.ekilex.data.db.main.tables.records.ViewOsWordEkiRecommendationRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewOsWordEkiRecommendation extends TableImpl<ViewOsWordEkiRecommendationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.view_os_word_eki_recommendation</code>
     */
    public static final ViewOsWordEkiRecommendation VIEW_OS_WORD_EKI_RECOMMENDATION = new ViewOsWordEkiRecommendation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewOsWordEkiRecommendationRecord> getRecordType() {
        return ViewOsWordEkiRecommendationRecord.class;
    }

    /**
     * The column <code>public.view_os_word_eki_recommendation.word_id</code>.
     */
    public final TableField<ViewOsWordEkiRecommendationRecord, Long> WORD_ID = createField(DSL.name("word_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.view_os_word_eki_recommendation.word_eki_recommendations</code>.
     */
    public final TableField<ViewOsWordEkiRecommendationRecord, JSON> WORD_EKI_RECOMMENDATIONS = createField(DSL.name("word_eki_recommendations"), SQLDataType.JSON, this, "");

    private ViewOsWordEkiRecommendation(Name alias, Table<ViewOsWordEkiRecommendationRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewOsWordEkiRecommendation(Name alias, Table<ViewOsWordEkiRecommendationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("create view \"view_os_word_eki_recommendation\" as  SELECT word_id,\n    json_agg(json_build_object('wordId', word_id, 'wordEkiRecommendationId', id, 'value', value, 'valuePrese', value_prese) ORDER BY id) AS word_eki_recommendations\n   FROM word_eki_recommendation wer\n  WHERE (EXISTS ( SELECT 1\n           FROM publishing p\n          WHERE (((p.target_name)::text = 'ww_os'::text) AND ((p.entity_name)::text = 'word_eki_recommendation'::text) AND (p.entity_id = wer.id))))\n  GROUP BY word_id\n  ORDER BY word_id;"));
    }

    /**
     * Create an aliased <code>public.view_os_word_eki_recommendation</code> table reference
     */
    public ViewOsWordEkiRecommendation(String alias) {
        this(DSL.name(alias), VIEW_OS_WORD_EKI_RECOMMENDATION);
    }

    /**
     * Create an aliased <code>public.view_os_word_eki_recommendation</code> table reference
     */
    public ViewOsWordEkiRecommendation(Name alias) {
        this(alias, VIEW_OS_WORD_EKI_RECOMMENDATION);
    }

    /**
     * Create a <code>public.view_os_word_eki_recommendation</code> table reference
     */
    public ViewOsWordEkiRecommendation() {
        this(DSL.name("view_os_word_eki_recommendation"), null);
    }

    public <O extends Record> ViewOsWordEkiRecommendation(Table<O> child, ForeignKey<O, ViewOsWordEkiRecommendationRecord> key) {
        super(child, key, VIEW_OS_WORD_EKI_RECOMMENDATION);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public ViewOsWordEkiRecommendation as(String alias) {
        return new ViewOsWordEkiRecommendation(DSL.name(alias), this);
    }

    @Override
    public ViewOsWordEkiRecommendation as(Name alias) {
        return new ViewOsWordEkiRecommendation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewOsWordEkiRecommendation rename(String name) {
        return new ViewOsWordEkiRecommendation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewOsWordEkiRecommendation rename(Name name) {
        return new ViewOsWordEkiRecommendation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, JSON> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
