/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main.tables.records;


import eki.ekilex.data.db.main.tables.EkiUserApplication;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EkiUserApplicationRecord extends UpdatableRecordImpl<EkiUserApplicationRecord> implements Record8<Long, Long, String, String, String, String, String, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.eki_user_application.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.eki_user_application.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.eki_user_application.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.eki_user_application.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.eki_user_application.dataset_code</code>.
     */
    public void setDatasetCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.eki_user_application.dataset_code</code>.
     */
    public String getDatasetCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.eki_user_application.auth_operation</code>.
     */
    public void setAuthOperation(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.eki_user_application.auth_operation</code>.
     */
    public String getAuthOperation() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.eki_user_application.lang</code>.
     */
    public void setLang(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.eki_user_application.lang</code>.
     */
    public String getLang() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.eki_user_application.comment</code>.
     */
    public void setComment(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.eki_user_application.comment</code>.
     */
    public String getComment() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.eki_user_application.status</code>.
     */
    public void setStatus(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.eki_user_application.status</code>.
     */
    public String getStatus() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.eki_user_application.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.eki_user_application.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, String, String, String, String, String, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, String, String, String, String, String, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return EkiUserApplication.EKI_USER_APPLICATION.ID;
    }

    @Override
    public Field<Long> field2() {
        return EkiUserApplication.EKI_USER_APPLICATION.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return EkiUserApplication.EKI_USER_APPLICATION.DATASET_CODE;
    }

    @Override
    public Field<String> field4() {
        return EkiUserApplication.EKI_USER_APPLICATION.AUTH_OPERATION;
    }

    @Override
    public Field<String> field5() {
        return EkiUserApplication.EKI_USER_APPLICATION.LANG;
    }

    @Override
    public Field<String> field6() {
        return EkiUserApplication.EKI_USER_APPLICATION.COMMENT;
    }

    @Override
    public Field<String> field7() {
        return EkiUserApplication.EKI_USER_APPLICATION.STATUS;
    }

    @Override
    public Field<Timestamp> field8() {
        return EkiUserApplication.EKI_USER_APPLICATION.CREATED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getDatasetCode();
    }

    @Override
    public String component4() {
        return getAuthOperation();
    }

    @Override
    public String component5() {
        return getLang();
    }

    @Override
    public String component6() {
        return getComment();
    }

    @Override
    public String component7() {
        return getStatus();
    }

    @Override
    public Timestamp component8() {
        return getCreated();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getDatasetCode();
    }

    @Override
    public String value4() {
        return getAuthOperation();
    }

    @Override
    public String value5() {
        return getLang();
    }

    @Override
    public String value6() {
        return getComment();
    }

    @Override
    public String value7() {
        return getStatus();
    }

    @Override
    public Timestamp value8() {
        return getCreated();
    }

    @Override
    public EkiUserApplicationRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public EkiUserApplicationRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public EkiUserApplicationRecord value3(String value) {
        setDatasetCode(value);
        return this;
    }

    @Override
    public EkiUserApplicationRecord value4(String value) {
        setAuthOperation(value);
        return this;
    }

    @Override
    public EkiUserApplicationRecord value5(String value) {
        setLang(value);
        return this;
    }

    @Override
    public EkiUserApplicationRecord value6(String value) {
        setComment(value);
        return this;
    }

    @Override
    public EkiUserApplicationRecord value7(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public EkiUserApplicationRecord value8(Timestamp value) {
        setCreated(value);
        return this;
    }

    @Override
    public EkiUserApplicationRecord values(Long value1, Long value2, String value3, String value4, String value5, String value6, String value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EkiUserApplicationRecord
     */
    public EkiUserApplicationRecord() {
        super(EkiUserApplication.EKI_USER_APPLICATION);
    }

    /**
     * Create a detached, initialised EkiUserApplicationRecord
     */
    public EkiUserApplicationRecord(Long id, Long userId, String datasetCode, String authOperation, String lang, String comment, String status, Timestamp created) {
        super(EkiUserApplication.EKI_USER_APPLICATION);

        setId(id);
        setUserId(userId);
        setDatasetCode(datasetCode);
        setAuthOperation(authOperation);
        setLang(lang);
        setComment(comment);
        setStatus(status);
        setCreated(created);
    }
}
