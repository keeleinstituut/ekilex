/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.tables.records;


import eki.ekilex.data.db.tables.LexemeActivityLogFdw;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LexemeActivityLogFdwRecord extends TableRecordImpl<LexemeActivityLogFdwRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.lexeme_activity_log_fdw.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.lexeme_activity_log_fdw.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.lexeme_activity_log_fdw.lexeme_id</code>.
     */
    public void setLexemeId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.lexeme_activity_log_fdw.lexeme_id</code>.
     */
    public Long getLexemeId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.lexeme_activity_log_fdw.activity_log_id</code>.
     */
    public void setActivityLogId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.lexeme_activity_log_fdw.activity_log_id</code>.
     */
    public Long getActivityLogId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return LexemeActivityLogFdw.LEXEME_ACTIVITY_LOG_FDW.ID;
    }

    @Override
    public Field<Long> field2() {
        return LexemeActivityLogFdw.LEXEME_ACTIVITY_LOG_FDW.LEXEME_ID;
    }

    @Override
    public Field<Long> field3() {
        return LexemeActivityLogFdw.LEXEME_ACTIVITY_LOG_FDW.ACTIVITY_LOG_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getLexemeId();
    }

    @Override
    public Long component3() {
        return getActivityLogId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getLexemeId();
    }

    @Override
    public Long value3() {
        return getActivityLogId();
    }

    @Override
    public LexemeActivityLogFdwRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public LexemeActivityLogFdwRecord value2(Long value) {
        setLexemeId(value);
        return this;
    }

    @Override
    public LexemeActivityLogFdwRecord value3(Long value) {
        setActivityLogId(value);
        return this;
    }

    @Override
    public LexemeActivityLogFdwRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LexemeActivityLogFdwRecord
     */
    public LexemeActivityLogFdwRecord() {
        super(LexemeActivityLogFdw.LEXEME_ACTIVITY_LOG_FDW);
    }

    /**
     * Create a detached, initialised LexemeActivityLogFdwRecord
     */
    public LexemeActivityLogFdwRecord(Long id, Long lexemeId, Long activityLogId) {
        super(LexemeActivityLogFdw.LEXEME_ACTIVITY_LOG_FDW);

        setId(id);
        setLexemeId(lexemeId);
        setActivityLogId(activityLogId);
    }
}
