/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main.udt;


import eki.ekilex.data.db.main.Public;
import eki.ekilex.data.db.main.udt.records.TypeValueEntityRecord;

import java.time.LocalDateTime;

import org.jooq.Schema;
import org.jooq.UDTField;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.SchemaImpl;
import org.jooq.impl.UDTImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypeValueEntity extends UDTImpl<TypeValueEntityRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.type_value_entity</code>
     */
    public static final TypeValueEntity TYPE_VALUE_ENTITY = new TypeValueEntity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TypeValueEntityRecord> getRecordType() {
        return TypeValueEntityRecord.class;
    }

    /**
     * The attribute <code>public.type_value_entity.id</code>.
     */
    public static final UDTField<TypeValueEntityRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT, TYPE_VALUE_ENTITY, "");

    /**
     * The attribute <code>public.type_value_entity.value</code>.
     */
    public static final UDTField<TypeValueEntityRecord, String> VALUE = createField(DSL.name("value"), SQLDataType.CLOB, TYPE_VALUE_ENTITY, "");

    /**
     * The attribute <code>public.type_value_entity.value_prese</code>.
     */
    public static final UDTField<TypeValueEntityRecord, String> VALUE_PRESE = createField(DSL.name("value_prese"), SQLDataType.CLOB, TYPE_VALUE_ENTITY, "");

    /**
     * The attribute <code>public.type_value_entity.lang</code>.
     */
    public static final UDTField<TypeValueEntityRecord, String> LANG = createField(DSL.name("lang"), SQLDataType.CHAR(3), TYPE_VALUE_ENTITY, "");

    /**
     * The attribute <code>public.type_value_entity.complexity</code>.
     */
    public static final UDTField<TypeValueEntityRecord, String> COMPLEXITY = createField(DSL.name("complexity"), SQLDataType.VARCHAR(100), TYPE_VALUE_ENTITY, "");

    /**
     * The attribute <code>public.type_value_entity.created_by</code>.
     */
    public static final UDTField<TypeValueEntityRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.CLOB, TYPE_VALUE_ENTITY, "");

    /**
     * The attribute <code>public.type_value_entity.created_on</code>.
     */
    public static final UDTField<TypeValueEntityRecord, LocalDateTime> CREATED_ON = createField(DSL.name("created_on"), SQLDataType.LOCALDATETIME(0), TYPE_VALUE_ENTITY, "");

    /**
     * The attribute <code>public.type_value_entity.modified_by</code>.
     */
    public static final UDTField<TypeValueEntityRecord, String> MODIFIED_BY = createField(DSL.name("modified_by"), SQLDataType.CLOB, TYPE_VALUE_ENTITY, "");

    /**
     * The attribute <code>public.type_value_entity.modified_on</code>.
     */
    public static final UDTField<TypeValueEntityRecord, LocalDateTime> MODIFIED_ON = createField(DSL.name("modified_on"), SQLDataType.LOCALDATETIME(0), TYPE_VALUE_ENTITY, "");

    /**
     * No further instances allowed
     */
    private TypeValueEntity() {
        super("type_value_entity", null, null, false);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC != null ? Public.PUBLIC : new SchemaImpl(DSL.name("public"));
    }
}
