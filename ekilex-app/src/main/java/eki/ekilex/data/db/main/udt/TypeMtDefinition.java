/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main.udt;


import eki.ekilex.data.db.main.Public;
import eki.ekilex.data.db.main.udt.records.TypeMtDefinitionRecord;

import org.jooq.Schema;
import org.jooq.UDTField;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.SchemaImpl;
import org.jooq.impl.UDTImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypeMtDefinition extends UDTImpl<TypeMtDefinitionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.type_mt_definition</code>
     */
    public static final TypeMtDefinition TYPE_MT_DEFINITION = new TypeMtDefinition();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TypeMtDefinitionRecord> getRecordType() {
        return TypeMtDefinitionRecord.class;
    }

    /**
     * The attribute <code>public.type_mt_definition.definition_id</code>.
     */
    public static final UDTField<TypeMtDefinitionRecord, Long> DEFINITION_ID = createField(DSL.name("definition_id"), SQLDataType.BIGINT, TYPE_MT_DEFINITION, "");

    /**
     * The attribute <code>public.type_mt_definition.definition_type_code</code>.
     */
    public static final UDTField<TypeMtDefinitionRecord, String> DEFINITION_TYPE_CODE = createField(DSL.name("definition_type_code"), SQLDataType.VARCHAR(100), TYPE_MT_DEFINITION, "");

    /**
     * The attribute <code>public.type_mt_definition.value</code>.
     */
    public static final UDTField<TypeMtDefinitionRecord, String> VALUE = createField(DSL.name("value"), SQLDataType.CLOB, TYPE_MT_DEFINITION, "");

    /**
     * The attribute <code>public.type_mt_definition.value_prese</code>.
     */
    public static final UDTField<TypeMtDefinitionRecord, String> VALUE_PRESE = createField(DSL.name("value_prese"), SQLDataType.CLOB, TYPE_MT_DEFINITION, "");

    /**
     * The attribute <code>public.type_mt_definition.lang</code>.
     */
    public static final UDTField<TypeMtDefinitionRecord, String> LANG = createField(DSL.name("lang"), SQLDataType.CHAR(3), TYPE_MT_DEFINITION, "");

    /**
     * The attribute <code>public.type_mt_definition.complexity</code>.
     */
    public static final UDTField<TypeMtDefinitionRecord, String> COMPLEXITY = createField(DSL.name("complexity"), SQLDataType.VARCHAR(100), TYPE_MT_DEFINITION, "");

    /**
     * The attribute <code>public.type_mt_definition.is_public</code>.
     */
    public static final UDTField<TypeMtDefinitionRecord, Boolean> IS_PUBLIC = createField(DSL.name("is_public"), SQLDataType.BOOLEAN, TYPE_MT_DEFINITION, "");

    /**
     * No further instances allowed
     */
    private TypeMtDefinition() {
        super("type_mt_definition", null, null, false);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC != null ? Public.PUBLIC : new SchemaImpl(DSL.name("public"));
    }
}
