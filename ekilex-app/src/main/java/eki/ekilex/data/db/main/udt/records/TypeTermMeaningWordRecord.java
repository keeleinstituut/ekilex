/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main.udt.records;


import eki.ekilex.data.db.main.udt.TypeTermMeaningWord;

import org.jooq.Field;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypeTermMeaningWordRecord extends UDTRecordImpl<TypeTermMeaningWordRecord> implements Record14<Long, String, String, Integer, String, String[], Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, String[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.type_term_meaning_word.word_id</code>.
     */
    public void setWordId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.type_term_meaning_word.word_id</code>.
     */
    public Long getWordId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.type_term_meaning_word.word_value</code>.
     */
    public void setWordValue(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.type_term_meaning_word.word_value</code>.
     */
    public String getWordValue() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.type_term_meaning_word.word_value_prese</code>.
     */
    public void setWordValuePrese(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.type_term_meaning_word.word_value_prese</code>.
     */
    public String getWordValuePrese() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.type_term_meaning_word.homonym_nr</code>.
     */
    public void setHomonymNr(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.type_term_meaning_word.homonym_nr</code>.
     */
    public Integer getHomonymNr() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.type_term_meaning_word.lang</code>.
     */
    public void setLang(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.type_term_meaning_word.lang</code>.
     */
    public String getLang() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.type_term_meaning_word.word_type_codes</code>.
     */
    public void setWordTypeCodes(String[] value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.type_term_meaning_word.word_type_codes</code>.
     */
    public String[] getWordTypeCodes() {
        return (String[]) get(5);
    }

    /**
     * Setter for <code>public.type_term_meaning_word.prefixoid</code>.
     */
    public void setPrefixoid(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.type_term_meaning_word.prefixoid</code>.
     */
    public Boolean getPrefixoid() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.type_term_meaning_word.suffixoid</code>.
     */
    public void setSuffixoid(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.type_term_meaning_word.suffixoid</code>.
     */
    public Boolean getSuffixoid() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.type_term_meaning_word.foreign</code>.
     */
    public void setForeign(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.type_term_meaning_word.foreign</code>.
     */
    public Boolean getForeign() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.type_term_meaning_word.matching_word</code>.
     */
    public void setMatchingWord(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.type_term_meaning_word.matching_word</code>.
     */
    public Boolean getMatchingWord() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>public.type_term_meaning_word.most_preferred</code>.
     */
    public void setMostPreferred(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.type_term_meaning_word.most_preferred</code>.
     */
    public Boolean getMostPreferred() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>public.type_term_meaning_word.least_preferred</code>.
     */
    public void setLeastPreferred(Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.type_term_meaning_word.least_preferred</code>.
     */
    public Boolean getLeastPreferred() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>public.type_term_meaning_word.is_public</code>.
     */
    public void setIsPublic(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.type_term_meaning_word.is_public</code>.
     */
    public Boolean getIsPublic() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>public.type_term_meaning_word.dataset_codes</code>.
     */
    public void setDatasetCodes(String[] value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.type_term_meaning_word.dataset_codes</code>.
     */
    public String[] getDatasetCodes() {
        return (String[]) get(13);
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Long, String, String, Integer, String, String[], Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, String[]> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Long, String, String, Integer, String, String[], Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, String[]> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TypeTermMeaningWord.WORD_ID;
    }

    @Override
    public Field<String> field2() {
        return TypeTermMeaningWord.WORD_VALUE;
    }

    @Override
    public Field<String> field3() {
        return TypeTermMeaningWord.WORD_VALUE_PRESE;
    }

    @Override
    public Field<Integer> field4() {
        return TypeTermMeaningWord.HOMONYM_NR;
    }

    @Override
    public Field<String> field5() {
        return TypeTermMeaningWord.LANG;
    }

    @Override
    public Field<String[]> field6() {
        return TypeTermMeaningWord.WORD_TYPE_CODES;
    }

    @Override
    public Field<Boolean> field7() {
        return TypeTermMeaningWord.PREFIXOID;
    }

    @Override
    public Field<Boolean> field8() {
        return TypeTermMeaningWord.SUFFIXOID;
    }

    @Override
    public Field<Boolean> field9() {
        return TypeTermMeaningWord.FOREIGN;
    }

    @Override
    public Field<Boolean> field10() {
        return TypeTermMeaningWord.MATCHING_WORD;
    }

    @Override
    public Field<Boolean> field11() {
        return TypeTermMeaningWord.MOST_PREFERRED;
    }

    @Override
    public Field<Boolean> field12() {
        return TypeTermMeaningWord.LEAST_PREFERRED;
    }

    @Override
    public Field<Boolean> field13() {
        return TypeTermMeaningWord.IS_PUBLIC;
    }

    @Override
    public Field<String[]> field14() {
        return TypeTermMeaningWord.DATASET_CODES;
    }

    @Override
    public Long component1() {
        return getWordId();
    }

    @Override
    public String component2() {
        return getWordValue();
    }

    @Override
    public String component3() {
        return getWordValuePrese();
    }

    @Override
    public Integer component4() {
        return getHomonymNr();
    }

    @Override
    public String component5() {
        return getLang();
    }

    @Override
    public String[] component6() {
        return getWordTypeCodes();
    }

    @Override
    public Boolean component7() {
        return getPrefixoid();
    }

    @Override
    public Boolean component8() {
        return getSuffixoid();
    }

    @Override
    public Boolean component9() {
        return getForeign();
    }

    @Override
    public Boolean component10() {
        return getMatchingWord();
    }

    @Override
    public Boolean component11() {
        return getMostPreferred();
    }

    @Override
    public Boolean component12() {
        return getLeastPreferred();
    }

    @Override
    public Boolean component13() {
        return getIsPublic();
    }

    @Override
    public String[] component14() {
        return getDatasetCodes();
    }

    @Override
    public Long value1() {
        return getWordId();
    }

    @Override
    public String value2() {
        return getWordValue();
    }

    @Override
    public String value3() {
        return getWordValuePrese();
    }

    @Override
    public Integer value4() {
        return getHomonymNr();
    }

    @Override
    public String value5() {
        return getLang();
    }

    @Override
    public String[] value6() {
        return getWordTypeCodes();
    }

    @Override
    public Boolean value7() {
        return getPrefixoid();
    }

    @Override
    public Boolean value8() {
        return getSuffixoid();
    }

    @Override
    public Boolean value9() {
        return getForeign();
    }

    @Override
    public Boolean value10() {
        return getMatchingWord();
    }

    @Override
    public Boolean value11() {
        return getMostPreferred();
    }

    @Override
    public Boolean value12() {
        return getLeastPreferred();
    }

    @Override
    public Boolean value13() {
        return getIsPublic();
    }

    @Override
    public String[] value14() {
        return getDatasetCodes();
    }

    @Override
    public TypeTermMeaningWordRecord value1(Long value) {
        setWordId(value);
        return this;
    }

    @Override
    public TypeTermMeaningWordRecord value2(String value) {
        setWordValue(value);
        return this;
    }

    @Override
    public TypeTermMeaningWordRecord value3(String value) {
        setWordValuePrese(value);
        return this;
    }

    @Override
    public TypeTermMeaningWordRecord value4(Integer value) {
        setHomonymNr(value);
        return this;
    }

    @Override
    public TypeTermMeaningWordRecord value5(String value) {
        setLang(value);
        return this;
    }

    @Override
    public TypeTermMeaningWordRecord value6(String[] value) {
        setWordTypeCodes(value);
        return this;
    }

    @Override
    public TypeTermMeaningWordRecord value7(Boolean value) {
        setPrefixoid(value);
        return this;
    }

    @Override
    public TypeTermMeaningWordRecord value8(Boolean value) {
        setSuffixoid(value);
        return this;
    }

    @Override
    public TypeTermMeaningWordRecord value9(Boolean value) {
        setForeign(value);
        return this;
    }

    @Override
    public TypeTermMeaningWordRecord value10(Boolean value) {
        setMatchingWord(value);
        return this;
    }

    @Override
    public TypeTermMeaningWordRecord value11(Boolean value) {
        setMostPreferred(value);
        return this;
    }

    @Override
    public TypeTermMeaningWordRecord value12(Boolean value) {
        setLeastPreferred(value);
        return this;
    }

    @Override
    public TypeTermMeaningWordRecord value13(Boolean value) {
        setIsPublic(value);
        return this;
    }

    @Override
    public TypeTermMeaningWordRecord value14(String[] value) {
        setDatasetCodes(value);
        return this;
    }

    @Override
    public TypeTermMeaningWordRecord values(Long value1, String value2, String value3, Integer value4, String value5, String[] value6, Boolean value7, Boolean value8, Boolean value9, Boolean value10, Boolean value11, Boolean value12, Boolean value13, String[] value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TypeTermMeaningWordRecord
     */
    public TypeTermMeaningWordRecord() {
        super(TypeTermMeaningWord.TYPE_TERM_MEANING_WORD);
    }

    /**
     * Create a detached, initialised TypeTermMeaningWordRecord
     */
    public TypeTermMeaningWordRecord(Long wordId, String wordValue, String wordValuePrese, Integer homonymNr, String lang, String[] wordTypeCodes, Boolean prefixoid, Boolean suffixoid, Boolean foreign, Boolean matchingWord, Boolean mostPreferred, Boolean leastPreferred, Boolean isPublic, String[] datasetCodes) {
        super(TypeTermMeaningWord.TYPE_TERM_MEANING_WORD);

        setWordId(wordId);
        setWordValue(wordValue);
        setWordValuePrese(wordValuePrese);
        setHomonymNr(homonymNr);
        setLang(lang);
        setWordTypeCodes(wordTypeCodes);
        setPrefixoid(prefixoid);
        setSuffixoid(suffixoid);
        setForeign(foreign);
        setMatchingWord(matchingWord);
        setMostPreferred(mostPreferred);
        setLeastPreferred(leastPreferred);
        setIsPublic(isPublic);
        setDatasetCodes(datasetCodes);
    }
}
