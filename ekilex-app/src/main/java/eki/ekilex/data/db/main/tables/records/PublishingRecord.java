/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main.tables.records;


import eki.ekilex.data.db.main.tables.Publishing;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PublishingRecord extends UpdatableRecordImpl<PublishingRecord> implements Record6<Long, String, LocalDateTime, String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.publishing.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.publishing.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.publishing.event_by</code>.
     */
    public void setEventBy(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.publishing.event_by</code>.
     */
    public String getEventBy() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.publishing.event_on</code>.
     */
    public void setEventOn(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.publishing.event_on</code>.
     */
    public LocalDateTime getEventOn() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.publishing.target_name</code>.
     */
    public void setTargetName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.publishing.target_name</code>.
     */
    public String getTargetName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.publishing.entity_name</code>.
     */
    public void setEntityName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.publishing.entity_name</code>.
     */
    public String getEntityName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.publishing.entity_id</code>.
     */
    public void setEntityId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.publishing.entity_id</code>.
     */
    public Long getEntityId() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, LocalDateTime, String, String, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, LocalDateTime, String, String, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Publishing.PUBLISHING.ID;
    }

    @Override
    public Field<String> field2() {
        return Publishing.PUBLISHING.EVENT_BY;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Publishing.PUBLISHING.EVENT_ON;
    }

    @Override
    public Field<String> field4() {
        return Publishing.PUBLISHING.TARGET_NAME;
    }

    @Override
    public Field<String> field5() {
        return Publishing.PUBLISHING.ENTITY_NAME;
    }

    @Override
    public Field<Long> field6() {
        return Publishing.PUBLISHING.ENTITY_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEventBy();
    }

    @Override
    public LocalDateTime component3() {
        return getEventOn();
    }

    @Override
    public String component4() {
        return getTargetName();
    }

    @Override
    public String component5() {
        return getEntityName();
    }

    @Override
    public Long component6() {
        return getEntityId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEventBy();
    }

    @Override
    public LocalDateTime value3() {
        return getEventOn();
    }

    @Override
    public String value4() {
        return getTargetName();
    }

    @Override
    public String value5() {
        return getEntityName();
    }

    @Override
    public Long value6() {
        return getEntityId();
    }

    @Override
    public PublishingRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PublishingRecord value2(String value) {
        setEventBy(value);
        return this;
    }

    @Override
    public PublishingRecord value3(LocalDateTime value) {
        setEventOn(value);
        return this;
    }

    @Override
    public PublishingRecord value4(String value) {
        setTargetName(value);
        return this;
    }

    @Override
    public PublishingRecord value5(String value) {
        setEntityName(value);
        return this;
    }

    @Override
    public PublishingRecord value6(Long value) {
        setEntityId(value);
        return this;
    }

    @Override
    public PublishingRecord values(Long value1, String value2, LocalDateTime value3, String value4, String value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PublishingRecord
     */
    public PublishingRecord() {
        super(Publishing.PUBLISHING);
    }

    /**
     * Create a detached, initialised PublishingRecord
     */
    public PublishingRecord(Long id, String eventBy, LocalDateTime eventOn, String targetName, String entityName, Long entityId) {
        super(Publishing.PUBLISHING);

        setId(id);
        setEventBy(eventBy);
        setEventOn(eventOn);
        setTargetName(targetName);
        setEntityName(entityName);
        setEntityId(entityId);
    }
}
