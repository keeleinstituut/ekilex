/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main.tables.records;


import eki.ekilex.data.db.main.tables.LexRelation;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LexRelationRecord extends UpdatableRecordImpl<LexRelationRecord> implements Record5<Long, Long, Long, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.lex_relation.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.lex_relation.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.lex_relation.lexeme1_id</code>.
     */
    public void setLexeme1Id(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.lex_relation.lexeme1_id</code>.
     */
    public Long getLexeme1Id() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.lex_relation.lexeme2_id</code>.
     */
    public void setLexeme2Id(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.lex_relation.lexeme2_id</code>.
     */
    public Long getLexeme2Id() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.lex_relation.lex_rel_type_code</code>.
     */
    public void setLexRelTypeCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.lex_relation.lex_rel_type_code</code>.
     */
    public String getLexRelTypeCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.lex_relation.order_by</code>.
     */
    public void setOrderBy(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.lex_relation.order_by</code>.
     */
    public Long getOrderBy() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, String, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Long, String, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return LexRelation.LEX_RELATION.ID;
    }

    @Override
    public Field<Long> field2() {
        return LexRelation.LEX_RELATION.LEXEME1_ID;
    }

    @Override
    public Field<Long> field3() {
        return LexRelation.LEX_RELATION.LEXEME2_ID;
    }

    @Override
    public Field<String> field4() {
        return LexRelation.LEX_RELATION.LEX_REL_TYPE_CODE;
    }

    @Override
    public Field<Long> field5() {
        return LexRelation.LEX_RELATION.ORDER_BY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getLexeme1Id();
    }

    @Override
    public Long component3() {
        return getLexeme2Id();
    }

    @Override
    public String component4() {
        return getLexRelTypeCode();
    }

    @Override
    public Long component5() {
        return getOrderBy();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getLexeme1Id();
    }

    @Override
    public Long value3() {
        return getLexeme2Id();
    }

    @Override
    public String value4() {
        return getLexRelTypeCode();
    }

    @Override
    public Long value5() {
        return getOrderBy();
    }

    @Override
    public LexRelationRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public LexRelationRecord value2(Long value) {
        setLexeme1Id(value);
        return this;
    }

    @Override
    public LexRelationRecord value3(Long value) {
        setLexeme2Id(value);
        return this;
    }

    @Override
    public LexRelationRecord value4(String value) {
        setLexRelTypeCode(value);
        return this;
    }

    @Override
    public LexRelationRecord value5(Long value) {
        setOrderBy(value);
        return this;
    }

    @Override
    public LexRelationRecord values(Long value1, Long value2, Long value3, String value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LexRelationRecord
     */
    public LexRelationRecord() {
        super(LexRelation.LEX_RELATION);
    }

    /**
     * Create a detached, initialised LexRelationRecord
     */
    public LexRelationRecord(Long id, Long lexeme1Id, Long lexeme2Id, String lexRelTypeCode, Long orderBy) {
        super(LexRelation.LEX_RELATION);

        setId(id);
        setLexeme1Id(lexeme1Id);
        setLexeme2Id(lexeme2Id);
        setLexRelTypeCode(lexRelTypeCode);
        setOrderBy(orderBy);
    }
}
