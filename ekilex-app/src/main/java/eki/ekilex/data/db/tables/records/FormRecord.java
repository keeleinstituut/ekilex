/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.tables.records;


import eki.ekilex.data.db.tables.Form;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FormRecord extends UpdatableRecordImpl<FormRecord> implements Record13<Long, String, String, String, Integer, String, Boolean, String, String, String[], String, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.form.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.form.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.form.morph_group1</code>.
     */
    public void setMorphGroup1(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.form.morph_group1</code>.
     */
    public String getMorphGroup1() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.form.morph_group2</code>.
     */
    public void setMorphGroup2(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.form.morph_group2</code>.
     */
    public String getMorphGroup2() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.form.morph_group3</code>.
     */
    public void setMorphGroup3(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.form.morph_group3</code>.
     */
    public String getMorphGroup3() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.form.display_level</code>.
     */
    public void setDisplayLevel(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.form.display_level</code>.
     */
    public Integer getDisplayLevel() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.form.morph_code</code>.
     */
    public void setMorphCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.form.morph_code</code>.
     */
    public String getMorphCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.form.morph_exists</code>.
     */
    public void setMorphExists(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.form.morph_exists</code>.
     */
    public Boolean getMorphExists() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.form.value</code>.
     */
    public void setValue(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.form.value</code>.
     */
    public String getValue() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.form.value_prese</code>.
     */
    public void setValuePrese(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.form.value_prese</code>.
     */
    public String getValuePrese() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.form.components</code>.
     */
    public void setComponents(String[] value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.form.components</code>.
     */
    public String[] getComponents() {
        return (String[]) get(9);
    }

    /**
     * Setter for <code>public.form.display_form</code>.
     */
    public void setDisplayForm(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.form.display_form</code>.
     */
    public String getDisplayForm() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.form.audio_file</code>.
     */
    public void setAudioFile(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.form.audio_file</code>.
     */
    public String getAudioFile() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.form.is_questionable</code>.
     */
    public void setIsQuestionable(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.form.is_questionable</code>.
     */
    public Boolean getIsQuestionable() {
        return (Boolean) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, String, String, String, Integer, String, Boolean, String, String, String[], String, String, Boolean> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Long, String, String, String, Integer, String, Boolean, String, String, String[], String, String, Boolean> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Form.FORM.ID;
    }

    @Override
    public Field<String> field2() {
        return Form.FORM.MORPH_GROUP1;
    }

    @Override
    public Field<String> field3() {
        return Form.FORM.MORPH_GROUP2;
    }

    @Override
    public Field<String> field4() {
        return Form.FORM.MORPH_GROUP3;
    }

    @Override
    public Field<Integer> field5() {
        return Form.FORM.DISPLAY_LEVEL;
    }

    @Override
    public Field<String> field6() {
        return Form.FORM.MORPH_CODE;
    }

    @Override
    public Field<Boolean> field7() {
        return Form.FORM.MORPH_EXISTS;
    }

    @Override
    public Field<String> field8() {
        return Form.FORM.VALUE;
    }

    @Override
    public Field<String> field9() {
        return Form.FORM.VALUE_PRESE;
    }

    @Override
    public Field<String[]> field10() {
        return Form.FORM.COMPONENTS;
    }

    @Override
    public Field<String> field11() {
        return Form.FORM.DISPLAY_FORM;
    }

    @Override
    public Field<String> field12() {
        return Form.FORM.AUDIO_FILE;
    }

    @Override
    public Field<Boolean> field13() {
        return Form.FORM.IS_QUESTIONABLE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getMorphGroup1();
    }

    @Override
    public String component3() {
        return getMorphGroup2();
    }

    @Override
    public String component4() {
        return getMorphGroup3();
    }

    @Override
    public Integer component5() {
        return getDisplayLevel();
    }

    @Override
    public String component6() {
        return getMorphCode();
    }

    @Override
    public Boolean component7() {
        return getMorphExists();
    }

    @Override
    public String component8() {
        return getValue();
    }

    @Override
    public String component9() {
        return getValuePrese();
    }

    @Override
    public String[] component10() {
        return getComponents();
    }

    @Override
    public String component11() {
        return getDisplayForm();
    }

    @Override
    public String component12() {
        return getAudioFile();
    }

    @Override
    public Boolean component13() {
        return getIsQuestionable();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getMorphGroup1();
    }

    @Override
    public String value3() {
        return getMorphGroup2();
    }

    @Override
    public String value4() {
        return getMorphGroup3();
    }

    @Override
    public Integer value5() {
        return getDisplayLevel();
    }

    @Override
    public String value6() {
        return getMorphCode();
    }

    @Override
    public Boolean value7() {
        return getMorphExists();
    }

    @Override
    public String value8() {
        return getValue();
    }

    @Override
    public String value9() {
        return getValuePrese();
    }

    @Override
    public String[] value10() {
        return getComponents();
    }

    @Override
    public String value11() {
        return getDisplayForm();
    }

    @Override
    public String value12() {
        return getAudioFile();
    }

    @Override
    public Boolean value13() {
        return getIsQuestionable();
    }

    @Override
    public FormRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FormRecord value2(String value) {
        setMorphGroup1(value);
        return this;
    }

    @Override
    public FormRecord value3(String value) {
        setMorphGroup2(value);
        return this;
    }

    @Override
    public FormRecord value4(String value) {
        setMorphGroup3(value);
        return this;
    }

    @Override
    public FormRecord value5(Integer value) {
        setDisplayLevel(value);
        return this;
    }

    @Override
    public FormRecord value6(String value) {
        setMorphCode(value);
        return this;
    }

    @Override
    public FormRecord value7(Boolean value) {
        setMorphExists(value);
        return this;
    }

    @Override
    public FormRecord value8(String value) {
        setValue(value);
        return this;
    }

    @Override
    public FormRecord value9(String value) {
        setValuePrese(value);
        return this;
    }

    @Override
    public FormRecord value10(String[] value) {
        setComponents(value);
        return this;
    }

    @Override
    public FormRecord value11(String value) {
        setDisplayForm(value);
        return this;
    }

    @Override
    public FormRecord value12(String value) {
        setAudioFile(value);
        return this;
    }

    @Override
    public FormRecord value13(Boolean value) {
        setIsQuestionable(value);
        return this;
    }

    @Override
    public FormRecord values(Long value1, String value2, String value3, String value4, Integer value5, String value6, Boolean value7, String value8, String value9, String[] value10, String value11, String value12, Boolean value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FormRecord
     */
    public FormRecord() {
        super(Form.FORM);
    }

    /**
     * Create a detached, initialised FormRecord
     */
    public FormRecord(Long id, String morphGroup1, String morphGroup2, String morphGroup3, Integer displayLevel, String morphCode, Boolean morphExists, String value, String valuePrese, String[] components, String displayForm, String audioFile, Boolean isQuestionable) {
        super(Form.FORM);

        setId(id);
        setMorphGroup1(morphGroup1);
        setMorphGroup2(morphGroup2);
        setMorphGroup3(morphGroup3);
        setDisplayLevel(displayLevel);
        setMorphCode(morphCode);
        setMorphExists(morphExists);
        setValue(value);
        setValuePrese(valuePrese);
        setComponents(components);
        setDisplayForm(displayForm);
        setAudioFile(audioFile);
        setIsQuestionable(isQuestionable);
    }
}
