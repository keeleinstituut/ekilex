/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db;


import eki.ekilex.data.db.routines.ActivityLogIdFunc;
import eki.ekilex.data.db.routines.AdjustHomonymNrs;
import eki.ekilex.data.db.routines.EncodeText;
import eki.ekilex.data.db.routines.LexemeActivityLogIdFunc;
import eki.ekilex.data.db.routines.MeaningActivityLogIdFunc;
import eki.ekilex.data.db.routines.MeaningLastActivityLogIdFunc;
import eki.ekilex.data.db.routines.PostgresFdwDisconnect;
import eki.ekilex.data.db.routines.PostgresFdwDisconnectAll;
import eki.ekilex.data.db.routines.PostgresFdwHandler;
import eki.ekilex.data.db.routines.PostgresFdwValidator;
import eki.ekilex.data.db.routines.SourceActivityLogIdFunc;
import eki.ekilex.data.db.routines.WordActivityLogIdFunc;
import eki.ekilex.data.db.routines.WordLastActivityLogIdFunc;
import eki.ekilex.data.db.tables.PostgresFdwGetConnections;
import eki.ekilex.data.db.tables.records.PostgresFdwGetConnectionsRecord;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;


/**
 * Convenience access to all stored procedures and functions in public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>public.activity_log_id_func</code>
     */
    public static Long activityLogIdFunc(
          Configuration configuration
    ) {
        ActivityLogIdFunc f = new ActivityLogIdFunc();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.activity_log_id_func</code> as a field.
     */
    public static Field<Long> activityLogIdFunc() {
        ActivityLogIdFunc f = new ActivityLogIdFunc();

        return f.asField();
    }

    /**
     * Call <code>public.adjust_homonym_nrs</code>
     */
    public static void adjustHomonymNrs(
          Configuration configuration
    ) {
        AdjustHomonymNrs p = new AdjustHomonymNrs();

        p.execute(configuration);
    }

    /**
     * Call <code>public.encode_text</code>
     */
    public static String encodeText(
          Configuration configuration
        , String initialText
    ) {
        EncodeText f = new EncodeText();
        f.setInitialText(initialText);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.encode_text</code> as a field.
     */
    public static Field<String> encodeText(
          String initialText
    ) {
        EncodeText f = new EncodeText();
        f.setInitialText(initialText);

        return f.asField();
    }

    /**
     * Get <code>public.encode_text</code> as a field.
     */
    public static Field<String> encodeText(
          Field<String> initialText
    ) {
        EncodeText f = new EncodeText();
        f.setInitialText(initialText);

        return f.asField();
    }

    /**
     * Call <code>public.lexeme_activity_log_id_func</code>
     */
    public static Long lexemeActivityLogIdFunc(
          Configuration configuration
    ) {
        LexemeActivityLogIdFunc f = new LexemeActivityLogIdFunc();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.lexeme_activity_log_id_func</code> as a field.
     */
    public static Field<Long> lexemeActivityLogIdFunc() {
        LexemeActivityLogIdFunc f = new LexemeActivityLogIdFunc();

        return f.asField();
    }

    /**
     * Call <code>public.meaning_activity_log_id_func</code>
     */
    public static Long meaningActivityLogIdFunc(
          Configuration configuration
    ) {
        MeaningActivityLogIdFunc f = new MeaningActivityLogIdFunc();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.meaning_activity_log_id_func</code> as a field.
     */
    public static Field<Long> meaningActivityLogIdFunc() {
        MeaningActivityLogIdFunc f = new MeaningActivityLogIdFunc();

        return f.asField();
    }

    /**
     * Call <code>public.meaning_last_activity_log_id_func</code>
     */
    public static Long meaningLastActivityLogIdFunc(
          Configuration configuration
    ) {
        MeaningLastActivityLogIdFunc f = new MeaningLastActivityLogIdFunc();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.meaning_last_activity_log_id_func</code> as a field.
     */
    public static Field<Long> meaningLastActivityLogIdFunc() {
        MeaningLastActivityLogIdFunc f = new MeaningLastActivityLogIdFunc();

        return f.asField();
    }

    /**
     * Call <code>public.postgres_fdw_disconnect</code>
     */
    public static Boolean postgresFdwDisconnect(
          Configuration configuration
        , String __1
    ) {
        PostgresFdwDisconnect f = new PostgresFdwDisconnect();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.postgres_fdw_disconnect</code> as a field.
     */
    public static Field<Boolean> postgresFdwDisconnect(
          String __1
    ) {
        PostgresFdwDisconnect f = new PostgresFdwDisconnect();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Get <code>public.postgres_fdw_disconnect</code> as a field.
     */
    public static Field<Boolean> postgresFdwDisconnect(
          Field<String> __1
    ) {
        PostgresFdwDisconnect f = new PostgresFdwDisconnect();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.postgres_fdw_disconnect_all</code>
     */
    public static Boolean postgresFdwDisconnectAll(
          Configuration configuration
    ) {
        PostgresFdwDisconnectAll f = new PostgresFdwDisconnectAll();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.postgres_fdw_disconnect_all</code> as a field.
     */
    public static Field<Boolean> postgresFdwDisconnectAll() {
        PostgresFdwDisconnectAll f = new PostgresFdwDisconnectAll();

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Object postgresFdwHandler(
          Configuration configuration
    ) {
        PostgresFdwHandler f = new PostgresFdwHandler();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Object> postgresFdwHandler() {
        PostgresFdwHandler f = new PostgresFdwHandler();

        return f.asField();
    }

    /**
     * Call <code>public.postgres_fdw_validator</code>
     */
    public static void postgresFdwValidator(
          Configuration configuration
        , String[] __1
        , Long __2
    ) {
        PostgresFdwValidator p = new PostgresFdwValidator();
        p.set__1(__1);
        p.set__2(__2);

        p.execute(configuration);
    }

    /**
     * Call <code>public.source_activity_log_id_func</code>
     */
    public static Long sourceActivityLogIdFunc(
          Configuration configuration
    ) {
        SourceActivityLogIdFunc f = new SourceActivityLogIdFunc();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.source_activity_log_id_func</code> as a field.
     */
    public static Field<Long> sourceActivityLogIdFunc() {
        SourceActivityLogIdFunc f = new SourceActivityLogIdFunc();

        return f.asField();
    }

    /**
     * Call <code>public.word_activity_log_id_func</code>
     */
    public static Long wordActivityLogIdFunc(
          Configuration configuration
    ) {
        WordActivityLogIdFunc f = new WordActivityLogIdFunc();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.word_activity_log_id_func</code> as a field.
     */
    public static Field<Long> wordActivityLogIdFunc() {
        WordActivityLogIdFunc f = new WordActivityLogIdFunc();

        return f.asField();
    }

    /**
     * Call <code>public.word_last_activity_log_id_func</code>
     */
    public static Long wordLastActivityLogIdFunc(
          Configuration configuration
    ) {
        WordLastActivityLogIdFunc f = new WordLastActivityLogIdFunc();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.word_last_activity_log_id_func</code> as a field.
     */
    public static Field<Long> wordLastActivityLogIdFunc() {
        WordLastActivityLogIdFunc f = new WordLastActivityLogIdFunc();

        return f.asField();
    }

    /**
     * Call <code>public.postgres_fdw_get_connections</code>.
     */
    public static Result<PostgresFdwGetConnectionsRecord> postgresFdwGetConnections(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(eki.ekilex.data.db.tables.PostgresFdwGetConnections.POSTGRES_FDW_GET_CONNECTIONS.call(
        )).fetch();
    }

    /**
     * Get <code>public.postgres_fdw_get_connections</code> as a table.
     */
    public static PostgresFdwGetConnections postgresFdwGetConnections() {
        return eki.ekilex.data.db.tables.PostgresFdwGetConnections.POSTGRES_FDW_GET_CONNECTIONS.call(
        );
    }
}
