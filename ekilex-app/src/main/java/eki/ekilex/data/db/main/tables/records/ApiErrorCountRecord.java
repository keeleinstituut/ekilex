/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main.tables.records;


import eki.ekilex.data.db.main.tables.ApiErrorCount;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApiErrorCountRecord extends UpdatableRecordImpl<ApiErrorCountRecord> implements Record5<Long, String, String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.api_error_count.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.api_error_count.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.api_error_count.auth_name</code>.
     */
    public void setAuthName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.api_error_count.auth_name</code>.
     */
    public String getAuthName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.api_error_count.generic_path</code>.
     */
    public void setGenericPath(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.api_error_count.generic_path</code>.
     */
    public String getGenericPath() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.api_error_count.message</code>.
     */
    public void setMessage(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.api_error_count.message</code>.
     */
    public String getMessage() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.api_error_count.count</code>.
     */
    public void setCount(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.api_error_count.count</code>.
     */
    public Long getCount() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, String, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ApiErrorCount.API_ERROR_COUNT.ID;
    }

    @Override
    public Field<String> field2() {
        return ApiErrorCount.API_ERROR_COUNT.AUTH_NAME;
    }

    @Override
    public Field<String> field3() {
        return ApiErrorCount.API_ERROR_COUNT.GENERIC_PATH;
    }

    @Override
    public Field<String> field4() {
        return ApiErrorCount.API_ERROR_COUNT.MESSAGE;
    }

    @Override
    public Field<Long> field5() {
        return ApiErrorCount.API_ERROR_COUNT.COUNT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAuthName();
    }

    @Override
    public String component3() {
        return getGenericPath();
    }

    @Override
    public String component4() {
        return getMessage();
    }

    @Override
    public Long component5() {
        return getCount();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAuthName();
    }

    @Override
    public String value3() {
        return getGenericPath();
    }

    @Override
    public String value4() {
        return getMessage();
    }

    @Override
    public Long value5() {
        return getCount();
    }

    @Override
    public ApiErrorCountRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ApiErrorCountRecord value2(String value) {
        setAuthName(value);
        return this;
    }

    @Override
    public ApiErrorCountRecord value3(String value) {
        setGenericPath(value);
        return this;
    }

    @Override
    public ApiErrorCountRecord value4(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public ApiErrorCountRecord value5(Long value) {
        setCount(value);
        return this;
    }

    @Override
    public ApiErrorCountRecord values(Long value1, String value2, String value3, String value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApiErrorCountRecord
     */
    public ApiErrorCountRecord() {
        super(ApiErrorCount.API_ERROR_COUNT);
    }

    /**
     * Create a detached, initialised ApiErrorCountRecord
     */
    public ApiErrorCountRecord(Long id, String authName, String genericPath, String message, Long count) {
        super(ApiErrorCount.API_ERROR_COUNT);

        setId(id);
        setAuthName(authName);
        setGenericPath(genericPath);
        setMessage(message);
        setCount(count);
    }
}
