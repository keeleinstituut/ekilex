/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db;


import eki.ekilex.data.db.udt.TypeActivityLogDiff;
import eki.ekilex.data.db.udt.TypeClassifier;
import eki.ekilex.data.db.udt.TypeCollocMember;
import eki.ekilex.data.db.udt.TypeDefinition;
import eki.ekilex.data.db.udt.TypeDomain;
import eki.ekilex.data.db.udt.TypeFreeform;
import eki.ekilex.data.db.udt.TypeLangComplexity;
import eki.ekilex.data.db.udt.TypeLexemeRelation;
import eki.ekilex.data.db.udt.TypeMeaningRelation;
import eki.ekilex.data.db.udt.TypeMeaningWord;
import eki.ekilex.data.db.udt.TypeMediaFile;
import eki.ekilex.data.db.udt.TypeMtDefinition;
import eki.ekilex.data.db.udt.TypeMtLexeme;
import eki.ekilex.data.db.udt.TypeMtLexemeFreeform;
import eki.ekilex.data.db.udt.TypeMtWord;
import eki.ekilex.data.db.udt.TypeSourceLink;
import eki.ekilex.data.db.udt.TypeTermMeaningWord;
import eki.ekilex.data.db.udt.TypeUsage;
import eki.ekilex.data.db.udt.TypeValueNameLang;
import eki.ekilex.data.db.udt.TypeWordEtymRelation;
import eki.ekilex.data.db.udt.TypeWordHomNrDataTuple;
import eki.ekilex.data.db.udt.TypeWordRelMeaning;
import eki.ekilex.data.db.udt.TypeWordRelParam;
import eki.ekilex.data.db.udt.TypeWordRelation;


/**
 * Convenience access to all UDTs in public
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UDTs {

    /**
     * The type <code>public.type_activity_log_diff</code>
     */
    public static TypeActivityLogDiff TYPE_ACTIVITY_LOG_DIFF = eki.ekilex.data.db.udt.TypeActivityLogDiff.TYPE_ACTIVITY_LOG_DIFF;

    /**
     * The type <code>public.type_classifier</code>
     */
    public static TypeClassifier TYPE_CLASSIFIER = eki.ekilex.data.db.udt.TypeClassifier.TYPE_CLASSIFIER;

    /**
     * The type <code>public.type_colloc_member</code>
     */
    public static TypeCollocMember TYPE_COLLOC_MEMBER = eki.ekilex.data.db.udt.TypeCollocMember.TYPE_COLLOC_MEMBER;

    /**
     * The type <code>public.type_definition</code>
     */
    public static TypeDefinition TYPE_DEFINITION = eki.ekilex.data.db.udt.TypeDefinition.TYPE_DEFINITION;

    /**
     * The type <code>public.type_domain</code>
     */
    public static TypeDomain TYPE_DOMAIN = eki.ekilex.data.db.udt.TypeDomain.TYPE_DOMAIN;

    /**
     * The type <code>public.type_freeform</code>
     */
    public static TypeFreeform TYPE_FREEFORM = eki.ekilex.data.db.udt.TypeFreeform.TYPE_FREEFORM;

    /**
     * The type <code>public.type_lang_complexity</code>
     */
    public static TypeLangComplexity TYPE_LANG_COMPLEXITY = eki.ekilex.data.db.udt.TypeLangComplexity.TYPE_LANG_COMPLEXITY;

    /**
     * The type <code>public.type_lexeme_relation</code>
     */
    public static TypeLexemeRelation TYPE_LEXEME_RELATION = eki.ekilex.data.db.udt.TypeLexemeRelation.TYPE_LEXEME_RELATION;

    /**
     * The type <code>public.type_meaning_relation</code>
     */
    public static TypeMeaningRelation TYPE_MEANING_RELATION = eki.ekilex.data.db.udt.TypeMeaningRelation.TYPE_MEANING_RELATION;

    /**
     * The type <code>public.type_meaning_word</code>
     */
    public static TypeMeaningWord TYPE_MEANING_WORD = eki.ekilex.data.db.udt.TypeMeaningWord.TYPE_MEANING_WORD;

    /**
     * The type <code>public.type_media_file</code>
     */
    public static TypeMediaFile TYPE_MEDIA_FILE = eki.ekilex.data.db.udt.TypeMediaFile.TYPE_MEDIA_FILE;

    /**
     * The type <code>public.type_mt_definition</code>
     */
    public static TypeMtDefinition TYPE_MT_DEFINITION = eki.ekilex.data.db.udt.TypeMtDefinition.TYPE_MT_DEFINITION;

    /**
     * The type <code>public.type_mt_lexeme</code>
     */
    public static TypeMtLexeme TYPE_MT_LEXEME = eki.ekilex.data.db.udt.TypeMtLexeme.TYPE_MT_LEXEME;

    /**
     * The type <code>public.type_mt_lexeme_freeform</code>
     */
    public static TypeMtLexemeFreeform TYPE_MT_LEXEME_FREEFORM = eki.ekilex.data.db.udt.TypeMtLexemeFreeform.TYPE_MT_LEXEME_FREEFORM;

    /**
     * The type <code>public.type_mt_word</code>
     */
    public static TypeMtWord TYPE_MT_WORD = eki.ekilex.data.db.udt.TypeMtWord.TYPE_MT_WORD;

    /**
     * The type <code>public.type_source_link</code>
     */
    public static TypeSourceLink TYPE_SOURCE_LINK = eki.ekilex.data.db.udt.TypeSourceLink.TYPE_SOURCE_LINK;

    /**
     * The type <code>public.type_term_meaning_word</code>
     */
    public static TypeTermMeaningWord TYPE_TERM_MEANING_WORD = eki.ekilex.data.db.udt.TypeTermMeaningWord.TYPE_TERM_MEANING_WORD;

    /**
     * The type <code>public.type_usage</code>
     */
    public static TypeUsage TYPE_USAGE = eki.ekilex.data.db.udt.TypeUsage.TYPE_USAGE;

    /**
     * The type <code>public.type_value_name_lang</code>
     */
    public static TypeValueNameLang TYPE_VALUE_NAME_LANG = eki.ekilex.data.db.udt.TypeValueNameLang.TYPE_VALUE_NAME_LANG;

    /**
     * The type <code>public.type_word_etym_relation</code>
     */
    public static TypeWordEtymRelation TYPE_WORD_ETYM_RELATION = eki.ekilex.data.db.udt.TypeWordEtymRelation.TYPE_WORD_ETYM_RELATION;

    /**
     * The type <code>public.type_word_hom_nr_data_tuple</code>
     */
    public static TypeWordHomNrDataTuple TYPE_WORD_HOM_NR_DATA_TUPLE = eki.ekilex.data.db.udt.TypeWordHomNrDataTuple.TYPE_WORD_HOM_NR_DATA_TUPLE;

    /**
     * The type <code>public.type_word_rel_meaning</code>
     */
    public static TypeWordRelMeaning TYPE_WORD_REL_MEANING = eki.ekilex.data.db.udt.TypeWordRelMeaning.TYPE_WORD_REL_MEANING;

    /**
     * The type <code>public.type_word_rel_param</code>
     */
    public static TypeWordRelParam TYPE_WORD_REL_PARAM = eki.ekilex.data.db.udt.TypeWordRelParam.TYPE_WORD_REL_PARAM;

    /**
     * The type <code>public.type_word_relation</code>
     */
    public static TypeWordRelation TYPE_WORD_RELATION = eki.ekilex.data.db.udt.TypeWordRelation.TYPE_WORD_RELATION;
}
