/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main.tables.records;


import eki.ekilex.data.db.main.tables.MeaningLastActivityLog;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MeaningLastActivityLogRecord extends UpdatableRecordImpl<MeaningLastActivityLogRecord> implements Record4<Long, Long, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.meaning_last_activity_log.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.meaning_last_activity_log.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.meaning_last_activity_log.meaning_id</code>.
     */
    public void setMeaningId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.meaning_last_activity_log.meaning_id</code>.
     */
    public Long getMeaningId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.meaning_last_activity_log.activity_log_id</code>.
     */
    public void setActivityLogId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.meaning_last_activity_log.activity_log_id</code>.
     */
    public Long getActivityLogId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.meaning_last_activity_log.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.meaning_last_activity_log.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, Long, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, Long, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return MeaningLastActivityLog.MEANING_LAST_ACTIVITY_LOG.ID;
    }

    @Override
    public Field<Long> field2() {
        return MeaningLastActivityLog.MEANING_LAST_ACTIVITY_LOG.MEANING_ID;
    }

    @Override
    public Field<Long> field3() {
        return MeaningLastActivityLog.MEANING_LAST_ACTIVITY_LOG.ACTIVITY_LOG_ID;
    }

    @Override
    public Field<String> field4() {
        return MeaningLastActivityLog.MEANING_LAST_ACTIVITY_LOG.TYPE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getMeaningId();
    }

    @Override
    public Long component3() {
        return getActivityLogId();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getMeaningId();
    }

    @Override
    public Long value3() {
        return getActivityLogId();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public MeaningLastActivityLogRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MeaningLastActivityLogRecord value2(Long value) {
        setMeaningId(value);
        return this;
    }

    @Override
    public MeaningLastActivityLogRecord value3(Long value) {
        setActivityLogId(value);
        return this;
    }

    @Override
    public MeaningLastActivityLogRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public MeaningLastActivityLogRecord values(Long value1, Long value2, Long value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MeaningLastActivityLogRecord
     */
    public MeaningLastActivityLogRecord() {
        super(MeaningLastActivityLog.MEANING_LAST_ACTIVITY_LOG);
    }

    /**
     * Create a detached, initialised MeaningLastActivityLogRecord
     */
    public MeaningLastActivityLogRecord(Long id, Long meaningId, Long activityLogId, String type) {
        super(MeaningLastActivityLog.MEANING_LAST_ACTIVITY_LOG);

        setId(id);
        setMeaningId(meaningId);
        setActivityLogId(activityLogId);
        setType(type);
    }
}
