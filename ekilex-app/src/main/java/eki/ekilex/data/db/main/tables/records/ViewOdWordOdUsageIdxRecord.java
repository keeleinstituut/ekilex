/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main.tables.records;


import eki.ekilex.data.db.main.tables.ViewOdWordOdUsageIdx;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewOdWordOdUsageIdxRecord extends TableRecordImpl<ViewOdWordOdUsageIdxRecord> implements Record3<Long, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.view_od_word_od_usage_idx.word_id</code>.
     */
    public void setWordId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.view_od_word_od_usage_idx.word_id</code>.
     */
    public Long getWordId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.view_od_word_od_usage_idx.word_od_usage_id</code>.
     */
    public void setWordOdUsageId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.view_od_word_od_usage_idx.word_od_usage_id</code>.
     */
    public Long getWordOdUsageId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.view_od_word_od_usage_idx.value</code>.
     */
    public void setValue(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.view_od_word_od_usage_idx.value</code>.
     */
    public String getValue() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ViewOdWordOdUsageIdx.VIEW_OD_WORD_OD_USAGE_IDX.WORD_ID;
    }

    @Override
    public Field<Long> field2() {
        return ViewOdWordOdUsageIdx.VIEW_OD_WORD_OD_USAGE_IDX.WORD_OD_USAGE_ID;
    }

    @Override
    public Field<String> field3() {
        return ViewOdWordOdUsageIdx.VIEW_OD_WORD_OD_USAGE_IDX.VALUE;
    }

    @Override
    public Long component1() {
        return getWordId();
    }

    @Override
    public Long component2() {
        return getWordOdUsageId();
    }

    @Override
    public String component3() {
        return getValue();
    }

    @Override
    public Long value1() {
        return getWordId();
    }

    @Override
    public Long value2() {
        return getWordOdUsageId();
    }

    @Override
    public String value3() {
        return getValue();
    }

    @Override
    public ViewOdWordOdUsageIdxRecord value1(Long value) {
        setWordId(value);
        return this;
    }

    @Override
    public ViewOdWordOdUsageIdxRecord value2(Long value) {
        setWordOdUsageId(value);
        return this;
    }

    @Override
    public ViewOdWordOdUsageIdxRecord value3(String value) {
        setValue(value);
        return this;
    }

    @Override
    public ViewOdWordOdUsageIdxRecord values(Long value1, Long value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewOdWordOdUsageIdxRecord
     */
    public ViewOdWordOdUsageIdxRecord() {
        super(ViewOdWordOdUsageIdx.VIEW_OD_WORD_OD_USAGE_IDX);
    }

    /**
     * Create a detached, initialised ViewOdWordOdUsageIdxRecord
     */
    public ViewOdWordOdUsageIdxRecord(Long wordId, Long wordOdUsageId, String value) {
        super(ViewOdWordOdUsageIdx.VIEW_OD_WORD_OD_USAGE_IDX);

        setWordId(wordId);
        setWordOdUsageId(wordOdUsageId);
        setValue(value);
    }
}
