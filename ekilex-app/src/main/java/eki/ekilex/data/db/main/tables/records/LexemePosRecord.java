/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main.tables.records;


import eki.ekilex.data.db.main.tables.LexemePos;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LexemePosRecord extends UpdatableRecordImpl<LexemePosRecord> implements Record4<Long, Long, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.lexeme_pos.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.lexeme_pos.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.lexeme_pos.lexeme_id</code>.
     */
    public void setLexemeId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.lexeme_pos.lexeme_id</code>.
     */
    public Long getLexemeId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.lexeme_pos.pos_code</code>.
     */
    public void setPosCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.lexeme_pos.pos_code</code>.
     */
    public String getPosCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.lexeme_pos.order_by</code>.
     */
    public void setOrderBy(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.lexeme_pos.order_by</code>.
     */
    public Long getOrderBy() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return LexemePos.LEXEME_POS.ID;
    }

    @Override
    public Field<Long> field2() {
        return LexemePos.LEXEME_POS.LEXEME_ID;
    }

    @Override
    public Field<String> field3() {
        return LexemePos.LEXEME_POS.POS_CODE;
    }

    @Override
    public Field<Long> field4() {
        return LexemePos.LEXEME_POS.ORDER_BY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getLexemeId();
    }

    @Override
    public String component3() {
        return getPosCode();
    }

    @Override
    public Long component4() {
        return getOrderBy();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getLexemeId();
    }

    @Override
    public String value3() {
        return getPosCode();
    }

    @Override
    public Long value4() {
        return getOrderBy();
    }

    @Override
    public LexemePosRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public LexemePosRecord value2(Long value) {
        setLexemeId(value);
        return this;
    }

    @Override
    public LexemePosRecord value3(String value) {
        setPosCode(value);
        return this;
    }

    @Override
    public LexemePosRecord value4(Long value) {
        setOrderBy(value);
        return this;
    }

    @Override
    public LexemePosRecord values(Long value1, Long value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LexemePosRecord
     */
    public LexemePosRecord() {
        super(LexemePos.LEXEME_POS);
    }

    /**
     * Create a detached, initialised LexemePosRecord
     */
    public LexemePosRecord(Long id, Long lexemeId, String posCode, Long orderBy) {
        super(LexemePos.LEXEME_POS);

        setId(id);
        setLexemeId(lexemeId);
        setPosCode(posCode);
        setOrderBy(orderBy);
    }
}
