/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.tables.records;


import eki.ekilex.data.db.tables.PostgresFdwGetConnections;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostgresFdwGetConnectionsRecord extends TableRecordImpl<PostgresFdwGetConnectionsRecord> implements Record2<String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.postgres_fdw_get_connections.server_name</code>.
     */
    public void setServerName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.postgres_fdw_get_connections.server_name</code>.
     */
    public String getServerName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.postgres_fdw_get_connections.valid</code>.
     */
    public void setValid(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.postgres_fdw_get_connections.valid</code>.
     */
    public Boolean getValid() {
        return (Boolean) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Boolean> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, Boolean> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return PostgresFdwGetConnections.POSTGRES_FDW_GET_CONNECTIONS.SERVER_NAME;
    }

    @Override
    public Field<Boolean> field2() {
        return PostgresFdwGetConnections.POSTGRES_FDW_GET_CONNECTIONS.VALID;
    }

    @Override
    public String component1() {
        return getServerName();
    }

    @Override
    public Boolean component2() {
        return getValid();
    }

    @Override
    public String value1() {
        return getServerName();
    }

    @Override
    public Boolean value2() {
        return getValid();
    }

    @Override
    public PostgresFdwGetConnectionsRecord value1(String value) {
        setServerName(value);
        return this;
    }

    @Override
    public PostgresFdwGetConnectionsRecord value2(Boolean value) {
        setValid(value);
        return this;
    }

    @Override
    public PostgresFdwGetConnectionsRecord values(String value1, Boolean value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostgresFdwGetConnectionsRecord
     */
    public PostgresFdwGetConnectionsRecord() {
        super(PostgresFdwGetConnections.POSTGRES_FDW_GET_CONNECTIONS);
    }

    /**
     * Create a detached, initialised PostgresFdwGetConnectionsRecord
     */
    public PostgresFdwGetConnectionsRecord(String serverName, Boolean valid) {
        super(PostgresFdwGetConnections.POSTGRES_FDW_GET_CONNECTIONS);

        setServerName(serverName);
        setValid(valid);
    }
}
