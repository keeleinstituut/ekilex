/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.udt.records;


import eki.ekilex.data.db.udt.TypeMtDefinition;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypeMtDefinitionRecord extends UDTRecordImpl<TypeMtDefinitionRecord> implements Record7<Long, String, String, String, String, String, Boolean> {

    private static final long serialVersionUID = 804632164;

    /**
     * Setter for <code>public.type_mt_definition.definition_id</code>.
     */
    public void setDefinitionId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.type_mt_definition.definition_id</code>.
     */
    public Long getDefinitionId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.type_mt_definition.definition_type_code</code>.
     */
    public void setDefinitionTypeCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.type_mt_definition.definition_type_code</code>.
     */
    public String getDefinitionTypeCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.type_mt_definition.value</code>.
     */
    public void setValue(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.type_mt_definition.value</code>.
     */
    public String getValue() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.type_mt_definition.value_prese</code>.
     */
    public void setValuePrese(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.type_mt_definition.value_prese</code>.
     */
    public String getValuePrese() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.type_mt_definition.lang</code>.
     */
    public void setLang(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.type_mt_definition.lang</code>.
     */
    public String getLang() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.type_mt_definition.complexity</code>.
     */
    public void setComplexity(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.type_mt_definition.complexity</code>.
     */
    public String getComplexity() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.type_mt_definition.is_public</code>.
     */
    public void setIsPublic(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.type_mt_definition.is_public</code>.
     */
    public Boolean getIsPublic() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, String, String, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, String, String, String, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TypeMtDefinition.DEFINITION_ID;
    }

    @Override
    public Field<String> field2() {
        return TypeMtDefinition.DEFINITION_TYPE_CODE;
    }

    @Override
    public Field<String> field3() {
        return TypeMtDefinition.VALUE;
    }

    @Override
    public Field<String> field4() {
        return TypeMtDefinition.VALUE_PRESE;
    }

    @Override
    public Field<String> field5() {
        return TypeMtDefinition.LANG;
    }

    @Override
    public Field<String> field6() {
        return TypeMtDefinition.COMPLEXITY;
    }

    @Override
    public Field<Boolean> field7() {
        return TypeMtDefinition.IS_PUBLIC;
    }

    @Override
    public Long component1() {
        return getDefinitionId();
    }

    @Override
    public String component2() {
        return getDefinitionTypeCode();
    }

    @Override
    public String component3() {
        return getValue();
    }

    @Override
    public String component4() {
        return getValuePrese();
    }

    @Override
    public String component5() {
        return getLang();
    }

    @Override
    public String component6() {
        return getComplexity();
    }

    @Override
    public Boolean component7() {
        return getIsPublic();
    }

    @Override
    public Long value1() {
        return getDefinitionId();
    }

    @Override
    public String value2() {
        return getDefinitionTypeCode();
    }

    @Override
    public String value3() {
        return getValue();
    }

    @Override
    public String value4() {
        return getValuePrese();
    }

    @Override
    public String value5() {
        return getLang();
    }

    @Override
    public String value6() {
        return getComplexity();
    }

    @Override
    public Boolean value7() {
        return getIsPublic();
    }

    @Override
    public TypeMtDefinitionRecord value1(Long value) {
        setDefinitionId(value);
        return this;
    }

    @Override
    public TypeMtDefinitionRecord value2(String value) {
        setDefinitionTypeCode(value);
        return this;
    }

    @Override
    public TypeMtDefinitionRecord value3(String value) {
        setValue(value);
        return this;
    }

    @Override
    public TypeMtDefinitionRecord value4(String value) {
        setValuePrese(value);
        return this;
    }

    @Override
    public TypeMtDefinitionRecord value5(String value) {
        setLang(value);
        return this;
    }

    @Override
    public TypeMtDefinitionRecord value6(String value) {
        setComplexity(value);
        return this;
    }

    @Override
    public TypeMtDefinitionRecord value7(Boolean value) {
        setIsPublic(value);
        return this;
    }

    @Override
    public TypeMtDefinitionRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TypeMtDefinitionRecord
     */
    public TypeMtDefinitionRecord() {
        super(TypeMtDefinition.TYPE_MT_DEFINITION);
    }

    /**
     * Create a detached, initialised TypeMtDefinitionRecord
     */
    public TypeMtDefinitionRecord(Long definitionId, String definitionTypeCode, String value, String valuePrese, String lang, String complexity, Boolean isPublic) {
        super(TypeMtDefinition.TYPE_MT_DEFINITION);

        set(0, definitionId);
        set(1, definitionTypeCode);
        set(2, value);
        set(3, valuePrese);
        set(4, lang);
        set(5, complexity);
        set(6, isPublic);
    }
}
