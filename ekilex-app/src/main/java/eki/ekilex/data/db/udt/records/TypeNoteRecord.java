/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.udt.records;


import eki.ekilex.data.db.udt.TypeNote;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypeNoteRecord extends UDTRecordImpl<TypeNoteRecord> implements Record10<Long, String, String, String, String, String, Timestamp, String, Timestamp, JSON> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.type_note.note_id</code>.
     */
    public void setNoteId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.type_note.note_id</code>.
     */
    public Long getNoteId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.type_note.value</code>.
     */
    public void setValue(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.type_note.value</code>.
     */
    public String getValue() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.type_note.value_prese</code>.
     */
    public void setValuePrese(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.type_note.value_prese</code>.
     */
    public String getValuePrese() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.type_note.lang</code>.
     */
    public void setLang(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.type_note.lang</code>.
     */
    public String getLang() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.type_note.complexity</code>.
     */
    public void setComplexity(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.type_note.complexity</code>.
     */
    public String getComplexity() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.type_note.created_by</code>.
     */
    public void setCreatedBy(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.type_note.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.type_note.created_on</code>.
     */
    public void setCreatedOn(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.type_note.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>public.type_note.modified_by</code>.
     */
    public void setModifiedBy(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.type_note.modified_by</code>.
     */
    public String getModifiedBy() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.type_note.modified_on</code>.
     */
    public void setModifiedOn(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.type_note.modified_on</code>.
     */
    public Timestamp getModifiedOn() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>public.type_note.source_links</code>.
     */
    public void setSourceLinks(JSON value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.type_note.source_links</code>.
     */
    public JSON getSourceLinks() {
        return (JSON) get(9);
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, String, String, String, String, String, Timestamp, String, Timestamp, JSON> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, String, String, String, String, String, Timestamp, String, Timestamp, JSON> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TypeNote.NOTE_ID;
    }

    @Override
    public Field<String> field2() {
        return TypeNote.VALUE;
    }

    @Override
    public Field<String> field3() {
        return TypeNote.VALUE_PRESE;
    }

    @Override
    public Field<String> field4() {
        return TypeNote.LANG;
    }

    @Override
    public Field<String> field5() {
        return TypeNote.COMPLEXITY;
    }

    @Override
    public Field<String> field6() {
        return TypeNote.CREATED_BY;
    }

    @Override
    public Field<Timestamp> field7() {
        return TypeNote.CREATED_ON;
    }

    @Override
    public Field<String> field8() {
        return TypeNote.MODIFIED_BY;
    }

    @Override
    public Field<Timestamp> field9() {
        return TypeNote.MODIFIED_ON;
    }

    @Override
    public Field<JSON> field10() {
        return TypeNote.SOURCE_LINKS;
    }

    @Override
    public Long component1() {
        return getNoteId();
    }

    @Override
    public String component2() {
        return getValue();
    }

    @Override
    public String component3() {
        return getValuePrese();
    }

    @Override
    public String component4() {
        return getLang();
    }

    @Override
    public String component5() {
        return getComplexity();
    }

    @Override
    public String component6() {
        return getCreatedBy();
    }

    @Override
    public Timestamp component7() {
        return getCreatedOn();
    }

    @Override
    public String component8() {
        return getModifiedBy();
    }

    @Override
    public Timestamp component9() {
        return getModifiedOn();
    }

    @Override
    public JSON component10() {
        return getSourceLinks();
    }

    @Override
    public Long value1() {
        return getNoteId();
    }

    @Override
    public String value2() {
        return getValue();
    }

    @Override
    public String value3() {
        return getValuePrese();
    }

    @Override
    public String value4() {
        return getLang();
    }

    @Override
    public String value5() {
        return getComplexity();
    }

    @Override
    public String value6() {
        return getCreatedBy();
    }

    @Override
    public Timestamp value7() {
        return getCreatedOn();
    }

    @Override
    public String value8() {
        return getModifiedBy();
    }

    @Override
    public Timestamp value9() {
        return getModifiedOn();
    }

    @Override
    public JSON value10() {
        return getSourceLinks();
    }

    @Override
    public TypeNoteRecord value1(Long value) {
        setNoteId(value);
        return this;
    }

    @Override
    public TypeNoteRecord value2(String value) {
        setValue(value);
        return this;
    }

    @Override
    public TypeNoteRecord value3(String value) {
        setValuePrese(value);
        return this;
    }

    @Override
    public TypeNoteRecord value4(String value) {
        setLang(value);
        return this;
    }

    @Override
    public TypeNoteRecord value5(String value) {
        setComplexity(value);
        return this;
    }

    @Override
    public TypeNoteRecord value6(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public TypeNoteRecord value7(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public TypeNoteRecord value8(String value) {
        setModifiedBy(value);
        return this;
    }

    @Override
    public TypeNoteRecord value9(Timestamp value) {
        setModifiedOn(value);
        return this;
    }

    @Override
    public TypeNoteRecord value10(JSON value) {
        setSourceLinks(value);
        return this;
    }

    @Override
    public TypeNoteRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, Timestamp value7, String value8, Timestamp value9, JSON value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TypeNoteRecord
     */
    public TypeNoteRecord() {
        super(TypeNote.TYPE_NOTE);
    }

    /**
     * Create a detached, initialised TypeNoteRecord
     */
    public TypeNoteRecord(Long noteId, String value, String valuePrese, String lang, String complexity, String createdBy, Timestamp createdOn, String modifiedBy, Timestamp modifiedOn, JSON sourceLinks) {
        super(TypeNote.TYPE_NOTE);

        setNoteId(noteId);
        setValue(value);
        setValuePrese(valuePrese);
        setLang(lang);
        setComplexity(complexity);
        setCreatedBy(createdBy);
        setCreatedOn(createdOn);
        setModifiedBy(modifiedBy);
        setModifiedOn(modifiedOn);
        setSourceLinks(sourceLinks);
    }
}
