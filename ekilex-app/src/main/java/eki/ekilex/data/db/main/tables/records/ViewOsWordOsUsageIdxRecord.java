/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main.tables.records;


import eki.ekilex.data.db.main.tables.ViewOsWordOsUsageIdx;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewOsWordOsUsageIdxRecord extends TableRecordImpl<ViewOsWordOsUsageIdxRecord> implements Record3<Long, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.view_os_word_os_usage_idx.word_id</code>.
     */
    public void setWordId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.view_os_word_os_usage_idx.word_id</code>.
     */
    public Long getWordId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.view_os_word_os_usage_idx.word_os_usage_id</code>.
     */
    public void setWordOsUsageId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.view_os_word_os_usage_idx.word_os_usage_id</code>.
     */
    public Long getWordOsUsageId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.view_os_word_os_usage_idx.value</code>.
     */
    public void setValue(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.view_os_word_os_usage_idx.value</code>.
     */
    public String getValue() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ViewOsWordOsUsageIdx.VIEW_OS_WORD_OS_USAGE_IDX.WORD_ID;
    }

    @Override
    public Field<Long> field2() {
        return ViewOsWordOsUsageIdx.VIEW_OS_WORD_OS_USAGE_IDX.WORD_OS_USAGE_ID;
    }

    @Override
    public Field<String> field3() {
        return ViewOsWordOsUsageIdx.VIEW_OS_WORD_OS_USAGE_IDX.VALUE;
    }

    @Override
    public Long component1() {
        return getWordId();
    }

    @Override
    public Long component2() {
        return getWordOsUsageId();
    }

    @Override
    public String component3() {
        return getValue();
    }

    @Override
    public Long value1() {
        return getWordId();
    }

    @Override
    public Long value2() {
        return getWordOsUsageId();
    }

    @Override
    public String value3() {
        return getValue();
    }

    @Override
    public ViewOsWordOsUsageIdxRecord value1(Long value) {
        setWordId(value);
        return this;
    }

    @Override
    public ViewOsWordOsUsageIdxRecord value2(Long value) {
        setWordOsUsageId(value);
        return this;
    }

    @Override
    public ViewOsWordOsUsageIdxRecord value3(String value) {
        setValue(value);
        return this;
    }

    @Override
    public ViewOsWordOsUsageIdxRecord values(Long value1, Long value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewOsWordOsUsageIdxRecord
     */
    public ViewOsWordOsUsageIdxRecord() {
        super(ViewOsWordOsUsageIdx.VIEW_OS_WORD_OS_USAGE_IDX);
    }

    /**
     * Create a detached, initialised ViewOsWordOsUsageIdxRecord
     */
    public ViewOsWordOsUsageIdxRecord(Long wordId, Long wordOsUsageId, String value) {
        super(ViewOsWordOsUsageIdx.VIEW_OS_WORD_OS_USAGE_IDX);

        setWordId(wordId);
        setWordOsUsageId(wordOsUsageId);
        setValue(value);
    }
}
