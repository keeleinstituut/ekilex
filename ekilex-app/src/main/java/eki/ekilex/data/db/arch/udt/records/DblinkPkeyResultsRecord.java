/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.arch.udt.records;


import eki.ekilex.data.db.arch.udt.DblinkPkeyResults;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DblinkPkeyResultsRecord extends UDTRecordImpl<DblinkPkeyResultsRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.dblink_pkey_results.position</code>.
     */
    public void setPosition(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.dblink_pkey_results.position</code>.
     */
    public Integer getPosition() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.dblink_pkey_results.colname</code>.
     */
    public void setColname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.dblink_pkey_results.colname</code>.
     */
    public String getColname() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return DblinkPkeyResults.POSITION;
    }

    @Override
    public Field<String> field2() {
        return DblinkPkeyResults.COLNAME;
    }

    @Override
    public Integer component1() {
        return getPosition();
    }

    @Override
    public String component2() {
        return getColname();
    }

    @Override
    public Integer value1() {
        return getPosition();
    }

    @Override
    public String value2() {
        return getColname();
    }

    @Override
    public DblinkPkeyResultsRecord value1(Integer value) {
        setPosition(value);
        return this;
    }

    @Override
    public DblinkPkeyResultsRecord value2(String value) {
        setColname(value);
        return this;
    }

    @Override
    public DblinkPkeyResultsRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DblinkPkeyResultsRecord
     */
    public DblinkPkeyResultsRecord() {
        super(DblinkPkeyResults.DBLINK_PKEY_RESULTS);
    }

    /**
     * Create a detached, initialised DblinkPkeyResultsRecord
     */
    public DblinkPkeyResultsRecord(Integer position, String colname) {
        super(DblinkPkeyResults.DBLINK_PKEY_RESULTS);

        setPosition(position);
        setColname(colname);
    }
}
