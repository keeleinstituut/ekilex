/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.arch.tables.records;


import eki.ekilex.data.db.arch.tables.DblinkGetNotify;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DblinkGetNotifyRecord extends TableRecordImpl<DblinkGetNotifyRecord> implements Record3<String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.dblink_get_notify.notify_name</code>.
     */
    public void setNotifyName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.dblink_get_notify.notify_name</code>.
     */
    public String getNotifyName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.dblink_get_notify.be_pid</code>.
     */
    public void setBePid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.dblink_get_notify.be_pid</code>.
     */
    public Integer getBePid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.dblink_get_notify.extra</code>.
     */
    public void setExtra(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.dblink_get_notify.extra</code>.
     */
    public String getExtra() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return DblinkGetNotify.DBLINK_GET_NOTIFY.NOTIFY_NAME;
    }

    @Override
    public Field<Integer> field2() {
        return DblinkGetNotify.DBLINK_GET_NOTIFY.BE_PID;
    }

    @Override
    public Field<String> field3() {
        return DblinkGetNotify.DBLINK_GET_NOTIFY.EXTRA;
    }

    @Override
    public String component1() {
        return getNotifyName();
    }

    @Override
    public Integer component2() {
        return getBePid();
    }

    @Override
    public String component3() {
        return getExtra();
    }

    @Override
    public String value1() {
        return getNotifyName();
    }

    @Override
    public Integer value2() {
        return getBePid();
    }

    @Override
    public String value3() {
        return getExtra();
    }

    @Override
    public DblinkGetNotifyRecord value1(String value) {
        setNotifyName(value);
        return this;
    }

    @Override
    public DblinkGetNotifyRecord value2(Integer value) {
        setBePid(value);
        return this;
    }

    @Override
    public DblinkGetNotifyRecord value3(String value) {
        setExtra(value);
        return this;
    }

    @Override
    public DblinkGetNotifyRecord values(String value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DblinkGetNotifyRecord
     */
    public DblinkGetNotifyRecord() {
        super(DblinkGetNotify.DBLINK_GET_NOTIFY);
    }

    /**
     * Create a detached, initialised DblinkGetNotifyRecord
     */
    public DblinkGetNotifyRecord(String notifyName, Integer bePid, String extra) {
        super(DblinkGetNotify.DBLINK_GET_NOTIFY);

        setNotifyName(notifyName);
        setBePid(bePid);
        setExtra(extra);
    }
}
