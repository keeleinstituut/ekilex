/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.udt.records;


import eki.ekilex.data.db.udt.TypeMtLexeme;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypeMtLexemeRecord extends UDTRecordImpl<TypeMtLexemeRecord> implements Record5<Long, Long, Long, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.type_mt_lexeme.lexeme_id</code>.
     */
    public void setLexemeId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.type_mt_lexeme.lexeme_id</code>.
     */
    public Long getLexemeId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.type_mt_lexeme.word_id</code>.
     */
    public void setWordId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.type_mt_lexeme.word_id</code>.
     */
    public Long getWordId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.type_mt_lexeme.meaning_id</code>.
     */
    public void setMeaningId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.type_mt_lexeme.meaning_id</code>.
     */
    public Long getMeaningId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.type_mt_lexeme.dataset_code</code>.
     */
    public void setDatasetCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.type_mt_lexeme.dataset_code</code>.
     */
    public String getDatasetCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.type_mt_lexeme.is_public</code>.
     */
    public void setIsPublic(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.type_mt_lexeme.is_public</code>.
     */
    public Boolean getIsPublic() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, String, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Long, String, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TypeMtLexeme.LEXEME_ID;
    }

    @Override
    public Field<Long> field2() {
        return TypeMtLexeme.WORD_ID;
    }

    @Override
    public Field<Long> field3() {
        return TypeMtLexeme.MEANING_ID;
    }

    @Override
    public Field<String> field4() {
        return TypeMtLexeme.DATASET_CODE;
    }

    @Override
    public Field<Boolean> field5() {
        return TypeMtLexeme.IS_PUBLIC;
    }

    @Override
    public Long component1() {
        return getLexemeId();
    }

    @Override
    public Long component2() {
        return getWordId();
    }

    @Override
    public Long component3() {
        return getMeaningId();
    }

    @Override
    public String component4() {
        return getDatasetCode();
    }

    @Override
    public Boolean component5() {
        return getIsPublic();
    }

    @Override
    public Long value1() {
        return getLexemeId();
    }

    @Override
    public Long value2() {
        return getWordId();
    }

    @Override
    public Long value3() {
        return getMeaningId();
    }

    @Override
    public String value4() {
        return getDatasetCode();
    }

    @Override
    public Boolean value5() {
        return getIsPublic();
    }

    @Override
    public TypeMtLexemeRecord value1(Long value) {
        setLexemeId(value);
        return this;
    }

    @Override
    public TypeMtLexemeRecord value2(Long value) {
        setWordId(value);
        return this;
    }

    @Override
    public TypeMtLexemeRecord value3(Long value) {
        setMeaningId(value);
        return this;
    }

    @Override
    public TypeMtLexemeRecord value4(String value) {
        setDatasetCode(value);
        return this;
    }

    @Override
    public TypeMtLexemeRecord value5(Boolean value) {
        setIsPublic(value);
        return this;
    }

    @Override
    public TypeMtLexemeRecord values(Long value1, Long value2, Long value3, String value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TypeMtLexemeRecord
     */
    public TypeMtLexemeRecord() {
        super(TypeMtLexeme.TYPE_MT_LEXEME);
    }

    /**
     * Create a detached, initialised TypeMtLexemeRecord
     */
    public TypeMtLexemeRecord(Long lexemeId, Long wordId, Long meaningId, String datasetCode, Boolean isPublic) {
        super(TypeMtLexeme.TYPE_MT_LEXEME);

        setLexemeId(lexemeId);
        setWordId(wordId);
        setMeaningId(meaningId);
        setDatasetCode(datasetCode);
        setIsPublic(isPublic);
    }
}
