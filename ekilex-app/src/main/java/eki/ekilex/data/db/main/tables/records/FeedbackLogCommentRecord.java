/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main.tables.records;


import eki.ekilex.data.db.main.tables.FeedbackLogComment;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeedbackLogCommentRecord extends UpdatableRecordImpl<FeedbackLogCommentRecord> implements Record5<Long, Long, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.feedback_log_comment.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.feedback_log_comment.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.feedback_log_comment.feedback_log_id</code>.
     */
    public void setFeedbackLogId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.feedback_log_comment.feedback_log_id</code>.
     */
    public Long getFeedbackLogId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.feedback_log_comment.comment</code>.
     */
    public void setComment(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.feedback_log_comment.comment</code>.
     */
    public String getComment() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.feedback_log_comment.user_name</code>.
     */
    public void setUserName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.feedback_log_comment.user_name</code>.
     */
    public String getUserName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.feedback_log_comment.created_on</code>.
     */
    public void setCreatedOn(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.feedback_log_comment.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, String, String, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, String, String, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return FeedbackLogComment.FEEDBACK_LOG_COMMENT.ID;
    }

    @Override
    public Field<Long> field2() {
        return FeedbackLogComment.FEEDBACK_LOG_COMMENT.FEEDBACK_LOG_ID;
    }

    @Override
    public Field<String> field3() {
        return FeedbackLogComment.FEEDBACK_LOG_COMMENT.COMMENT;
    }

    @Override
    public Field<String> field4() {
        return FeedbackLogComment.FEEDBACK_LOG_COMMENT.USER_NAME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return FeedbackLogComment.FEEDBACK_LOG_COMMENT.CREATED_ON;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getFeedbackLogId();
    }

    @Override
    public String component3() {
        return getComment();
    }

    @Override
    public String component4() {
        return getUserName();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedOn();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getFeedbackLogId();
    }

    @Override
    public String value3() {
        return getComment();
    }

    @Override
    public String value4() {
        return getUserName();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedOn();
    }

    @Override
    public FeedbackLogCommentRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FeedbackLogCommentRecord value2(Long value) {
        setFeedbackLogId(value);
        return this;
    }

    @Override
    public FeedbackLogCommentRecord value3(String value) {
        setComment(value);
        return this;
    }

    @Override
    public FeedbackLogCommentRecord value4(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public FeedbackLogCommentRecord value5(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public FeedbackLogCommentRecord values(Long value1, Long value2, String value3, String value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeedbackLogCommentRecord
     */
    public FeedbackLogCommentRecord() {
        super(FeedbackLogComment.FEEDBACK_LOG_COMMENT);
    }

    /**
     * Create a detached, initialised FeedbackLogCommentRecord
     */
    public FeedbackLogCommentRecord(Long id, Long feedbackLogId, String comment, String userName, LocalDateTime createdOn) {
        super(FeedbackLogComment.FEEDBACK_LOG_COMMENT);

        setId(id);
        setFeedbackLogId(feedbackLogId);
        setComment(comment);
        setUserName(userName);
        setCreatedOn(createdOn);
    }
}
