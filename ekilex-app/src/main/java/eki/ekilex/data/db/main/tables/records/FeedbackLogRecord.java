/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main.tables.records;


import eki.ekilex.data.db.main.tables.FeedbackLog;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeedbackLogRecord extends UpdatableRecordImpl<FeedbackLogRecord> implements Record6<Long, String, String, LocalDateTime, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.feedback_log.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.feedback_log.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.feedback_log.feedback_type</code>.
     */
    public void setFeedbackType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.feedback_log.feedback_type</code>.
     */
    public String getFeedbackType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.feedback_log.sender_email</code>.
     */
    public void setSenderEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.feedback_log.sender_email</code>.
     */
    public String getSenderEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.feedback_log.created_on</code>.
     */
    public void setCreatedOn(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.feedback_log.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.feedback_log.last_search</code>.
     */
    public void setLastSearch(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.feedback_log.last_search</code>.
     */
    public String getLastSearch() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.feedback_log.description</code>.
     */
    public void setDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.feedback_log.description</code>.
     */
    public String getDescription() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, LocalDateTime, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, String, LocalDateTime, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return FeedbackLog.FEEDBACK_LOG.ID;
    }

    @Override
    public Field<String> field2() {
        return FeedbackLog.FEEDBACK_LOG.FEEDBACK_TYPE;
    }

    @Override
    public Field<String> field3() {
        return FeedbackLog.FEEDBACK_LOG.SENDER_EMAIL;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return FeedbackLog.FEEDBACK_LOG.CREATED_ON;
    }

    @Override
    public Field<String> field5() {
        return FeedbackLog.FEEDBACK_LOG.LAST_SEARCH;
    }

    @Override
    public Field<String> field6() {
        return FeedbackLog.FEEDBACK_LOG.DESCRIPTION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFeedbackType();
    }

    @Override
    public String component3() {
        return getSenderEmail();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedOn();
    }

    @Override
    public String component5() {
        return getLastSearch();
    }

    @Override
    public String component6() {
        return getDescription();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFeedbackType();
    }

    @Override
    public String value3() {
        return getSenderEmail();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedOn();
    }

    @Override
    public String value5() {
        return getLastSearch();
    }

    @Override
    public String value6() {
        return getDescription();
    }

    @Override
    public FeedbackLogRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FeedbackLogRecord value2(String value) {
        setFeedbackType(value);
        return this;
    }

    @Override
    public FeedbackLogRecord value3(String value) {
        setSenderEmail(value);
        return this;
    }

    @Override
    public FeedbackLogRecord value4(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public FeedbackLogRecord value5(String value) {
        setLastSearch(value);
        return this;
    }

    @Override
    public FeedbackLogRecord value6(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public FeedbackLogRecord values(Long value1, String value2, String value3, LocalDateTime value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeedbackLogRecord
     */
    public FeedbackLogRecord() {
        super(FeedbackLog.FEEDBACK_LOG);
    }

    /**
     * Create a detached, initialised FeedbackLogRecord
     */
    public FeedbackLogRecord(Long id, String feedbackType, String senderEmail, LocalDateTime createdOn, String lastSearch, String description) {
        super(FeedbackLog.FEEDBACK_LOG);

        setId(id);
        setFeedbackType(feedbackType);
        setSenderEmail(senderEmail);
        setCreatedOn(createdOn);
        setLastSearch(lastSearch);
        setDescription(description);
    }
}
