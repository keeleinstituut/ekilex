/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.tables;


import eki.ekilex.data.db.Public;
import eki.ekilex.data.db.tables.records.ViewWwNewsArticleRecord;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewWwNewsArticle extends TableImpl<ViewWwNewsArticleRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.view_ww_news_article</code>
     */
    public static final ViewWwNewsArticle VIEW_WW_NEWS_ARTICLE = new ViewWwNewsArticle();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewWwNewsArticleRecord> getRecordType() {
        return ViewWwNewsArticleRecord.class;
    }

    /**
     * The column <code>public.view_ww_news_article.news_article_id</code>.
     */
    public final TableField<ViewWwNewsArticleRecord, Long> NEWS_ARTICLE_ID = createField(DSL.name("news_article_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.view_ww_news_article.created</code>.
     */
    public final TableField<ViewWwNewsArticleRecord, Timestamp> CREATED = createField(DSL.name("created"), SQLDataType.TIMESTAMP(6), this, "");

    /**
     * The column <code>public.view_ww_news_article.type</code>.
     */
    public final TableField<ViewWwNewsArticleRecord, String> TYPE = createField(DSL.name("type"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.view_ww_news_article.title</code>.
     */
    public final TableField<ViewWwNewsArticleRecord, String> TITLE = createField(DSL.name("title"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.view_ww_news_article.lang</code>.
     */
    public final TableField<ViewWwNewsArticleRecord, String> LANG = createField(DSL.name("lang"), SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>public.view_ww_news_article.news_sections</code>.
     */
    public final TableField<ViewWwNewsArticleRecord, String[]> NEWS_SECTIONS = createField(DSL.name("news_sections"), SQLDataType.CLOB.getArrayDataType(), this, "");

    private ViewWwNewsArticle(Name alias, Table<ViewWwNewsArticleRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewWwNewsArticle(Name alias, Table<ViewWwNewsArticleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("create view \"view_ww_news_article\" as  SELECT na.id AS news_article_id,\n    na.created,\n    na.type,\n    na.title,\n    na.lang,\n    array_agg(ns.content ORDER BY ns.id) AS news_sections\n   FROM news_article na,\n    news_section ns\n  WHERE (ns.news_article_id = na.id)\n  GROUP BY na.id\n  ORDER BY na.created DESC;"));
    }

    /**
     * Create an aliased <code>public.view_ww_news_article</code> table reference
     */
    public ViewWwNewsArticle(String alias) {
        this(DSL.name(alias), VIEW_WW_NEWS_ARTICLE);
    }

    /**
     * Create an aliased <code>public.view_ww_news_article</code> table reference
     */
    public ViewWwNewsArticle(Name alias) {
        this(alias, VIEW_WW_NEWS_ARTICLE);
    }

    /**
     * Create a <code>public.view_ww_news_article</code> table reference
     */
    public ViewWwNewsArticle() {
        this(DSL.name("view_ww_news_article"), null);
    }

    public <O extends Record> ViewWwNewsArticle(Table<O> child, ForeignKey<O, ViewWwNewsArticleRecord> key) {
        super(child, key, VIEW_WW_NEWS_ARTICLE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public ViewWwNewsArticle as(String alias) {
        return new ViewWwNewsArticle(DSL.name(alias), this);
    }

    @Override
    public ViewWwNewsArticle as(Name alias) {
        return new ViewWwNewsArticle(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewWwNewsArticle rename(String name) {
        return new ViewWwNewsArticle(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewWwNewsArticle rename(Name name) {
        return new ViewWwNewsArticle(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Timestamp, String, String, String, String[]> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
