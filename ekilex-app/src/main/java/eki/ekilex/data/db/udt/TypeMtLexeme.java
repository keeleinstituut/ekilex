/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.udt;


import eki.ekilex.data.db.Public;
import eki.ekilex.data.db.udt.records.TypeMtLexemeRecord;

import org.jooq.Schema;
import org.jooq.UDTField;
import org.jooq.impl.DSL;
import org.jooq.impl.SchemaImpl;
import org.jooq.impl.UDTImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypeMtLexeme extends UDTImpl<TypeMtLexemeRecord> {

    private static final long serialVersionUID = -2077025688;

    /**
     * The reference instance of <code>public.type_mt_lexeme</code>
     */
    public static final TypeMtLexeme TYPE_MT_LEXEME = new TypeMtLexeme();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TypeMtLexemeRecord> getRecordType() {
        return TypeMtLexemeRecord.class;
    }

    /**
     * The attribute <code>public.type_mt_lexeme.lexeme_id</code>.
     */
    public static final UDTField<TypeMtLexemeRecord, Long> LEXEME_ID = createField(DSL.name("lexeme_id"), org.jooq.impl.SQLDataType.BIGINT, TYPE_MT_LEXEME, "");

    /**
     * The attribute <code>public.type_mt_lexeme.word_id</code>.
     */
    public static final UDTField<TypeMtLexemeRecord, Long> WORD_ID = createField(DSL.name("word_id"), org.jooq.impl.SQLDataType.BIGINT, TYPE_MT_LEXEME, "");

    /**
     * The attribute <code>public.type_mt_lexeme.meaning_id</code>.
     */
    public static final UDTField<TypeMtLexemeRecord, Long> MEANING_ID = createField(DSL.name("meaning_id"), org.jooq.impl.SQLDataType.BIGINT, TYPE_MT_LEXEME, "");

    /**
     * The attribute <code>public.type_mt_lexeme.dataset_code</code>.
     */
    public static final UDTField<TypeMtLexemeRecord, String> DATASET_CODE = createField(DSL.name("dataset_code"), org.jooq.impl.SQLDataType.VARCHAR(10), TYPE_MT_LEXEME, "");

    /**
     * The attribute <code>public.type_mt_lexeme.is_public</code>.
     */
    public static final UDTField<TypeMtLexemeRecord, Boolean> IS_PUBLIC = createField(DSL.name("is_public"), org.jooq.impl.SQLDataType.BOOLEAN, TYPE_MT_LEXEME, "");

    /**
     * No further instances allowed
     */
    private TypeMtLexeme() {
        super("type_mt_lexeme", null, null, false);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC != null ? Public.PUBLIC : new SchemaImpl(DSL.name("public"));
    }
}
