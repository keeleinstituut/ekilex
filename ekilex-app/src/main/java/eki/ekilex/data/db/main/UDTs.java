/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.main;


import eki.ekilex.data.db.main.udt.TypeActivityLogDiff;
import eki.ekilex.data.db.main.udt.TypeClassifier;
import eki.ekilex.data.db.main.udt.TypeDomain;
import eki.ekilex.data.db.main.udt.TypeLangDatasetPublishing;
import eki.ekilex.data.db.main.udt.TypeMtDefinition;
import eki.ekilex.data.db.main.udt.TypeMtLexeme;
import eki.ekilex.data.db.main.udt.TypeMtLexemeFreeform;
import eki.ekilex.data.db.main.udt.TypeMtWord;
import eki.ekilex.data.db.main.udt.TypeTermMeaningWord;
import eki.ekilex.data.db.main.udt.TypeValueNameLang;
import eki.ekilex.data.db.main.udt.TypeWordHomNrDataTuple;
import eki.ekilex.data.db.main.udt.TypeWordRelMeaning;
import eki.ekilex.data.db.main.udt.TypeWordRelParam;


/**
 * Convenience access to all UDTs in public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UDTs {

    /**
     * The type <code>public.type_activity_log_diff</code>
     */
    public static final TypeActivityLogDiff TYPE_ACTIVITY_LOG_DIFF = eki.ekilex.data.db.main.udt.TypeActivityLogDiff.TYPE_ACTIVITY_LOG_DIFF;

    /**
     * The type <code>public.type_classifier</code>
     */
    public static final TypeClassifier TYPE_CLASSIFIER = eki.ekilex.data.db.main.udt.TypeClassifier.TYPE_CLASSIFIER;

    /**
     * The type <code>public.type_domain</code>
     */
    public static final TypeDomain TYPE_DOMAIN = eki.ekilex.data.db.main.udt.TypeDomain.TYPE_DOMAIN;

    /**
     * The type <code>public.type_lang_dataset_publishing</code>
     */
    public static final TypeLangDatasetPublishing TYPE_LANG_DATASET_PUBLISHING = eki.ekilex.data.db.main.udt.TypeLangDatasetPublishing.TYPE_LANG_DATASET_PUBLISHING;

    /**
     * The type <code>public.type_mt_definition</code>
     */
    public static final TypeMtDefinition TYPE_MT_DEFINITION = eki.ekilex.data.db.main.udt.TypeMtDefinition.TYPE_MT_DEFINITION;

    /**
     * The type <code>public.type_mt_lexeme</code>
     */
    public static final TypeMtLexeme TYPE_MT_LEXEME = eki.ekilex.data.db.main.udt.TypeMtLexeme.TYPE_MT_LEXEME;

    /**
     * The type <code>public.type_mt_lexeme_freeform</code>
     */
    public static final TypeMtLexemeFreeform TYPE_MT_LEXEME_FREEFORM = eki.ekilex.data.db.main.udt.TypeMtLexemeFreeform.TYPE_MT_LEXEME_FREEFORM;

    /**
     * The type <code>public.type_mt_word</code>
     */
    public static final TypeMtWord TYPE_MT_WORD = eki.ekilex.data.db.main.udt.TypeMtWord.TYPE_MT_WORD;

    /**
     * The type <code>public.type_term_meaning_word</code>
     */
    public static final TypeTermMeaningWord TYPE_TERM_MEANING_WORD = eki.ekilex.data.db.main.udt.TypeTermMeaningWord.TYPE_TERM_MEANING_WORD;

    /**
     * The type <code>public.type_value_name_lang</code>
     */
    public static final TypeValueNameLang TYPE_VALUE_NAME_LANG = eki.ekilex.data.db.main.udt.TypeValueNameLang.TYPE_VALUE_NAME_LANG;

    /**
     * The type <code>public.type_word_hom_nr_data_tuple</code>
     */
    public static final TypeWordHomNrDataTuple TYPE_WORD_HOM_NR_DATA_TUPLE = eki.ekilex.data.db.main.udt.TypeWordHomNrDataTuple.TYPE_WORD_HOM_NR_DATA_TUPLE;

    /**
     * The type <code>public.type_word_rel_meaning</code>
     */
    public static final TypeWordRelMeaning TYPE_WORD_REL_MEANING = eki.ekilex.data.db.main.udt.TypeWordRelMeaning.TYPE_WORD_REL_MEANING;

    /**
     * The type <code>public.type_word_rel_param</code>
     */
    public static final TypeWordRelParam TYPE_WORD_REL_PARAM = eki.ekilex.data.db.main.udt.TypeWordRelParam.TYPE_WORD_REL_PARAM;
}
